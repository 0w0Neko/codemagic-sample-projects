workflows:
    ios-automatic-code-signing:
      name: iOS automatic code signing
      instance_type: mac_pro
      working_directory: ios/ios-automatic-code-signing-demo-project
      environment:
        vars:
          XCODE_WORKSPACE: "swiftly.xcworkspace"
          XCODE_SCHEME: "swiftly"
          BUNDLE_ID: "io.codemagic.cmswiftly"
          # https://docs.codemagic.io/code-signing-yaml/signing-ios/
          APP_STORE_CONNECT_ISSUER_ID: Encrypted(Z0FBQUFBQmd1S0p2TGp6elRIY2thcURYb24zdFE1YzBDSk54OUhmbmMyT3F2aGJoUXU3Z3BZdjJycnJrTFpfaE16VU4tbzFURTBzeXdYc1dfYUR0UEdIZExYeTQwNGlBQUxsVWdYbVdNWlVPOURIaTRRdFdWLXB4QWJGbm9XWS1vX2JwbHhQNTFqU0o=)
          APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(Z0FBQUFBQmd1S0tIamJ3UjZMbUJkMXB5eXZfTXItSkdnZVNQNFFjQkdLUFV1THlaYUd5cTBNVkFfdEZSM2p5bHJkZGl5bWZkUVJ5alpFV2s0aERnX2ZxYXVpOTlSbE90SUE9PQ==) 
          APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(Z0FBQUFBQmd1S0tzUFRMV0JEX09MakRJaHk5TVc4NUkwTWNFbmhTWVJGMFlodUZabkFWRG96LTljc3BURTFhQXdEc3U2NDdHNTZaTUFFZk5vZHVnM1ZCTWN2NnhHSFppdHhPeU5TbjRPenZiSGlHQUdsNW1mMXJ5d2V3Yk5ZeWxaeVRrYUY3N2I2cjNYQ19iSFhqOGZCY1JFM0xteER4eUUxS1BNeVJIaDFUN2FabHJfeHFXMExjV2RzanVkT0s2SVh2aTV3TnZWaU01ZFhKZUExT3BsOFpaUWR6Tkh4SkVWaDZyaGp0QjZ0SGo2OEdqTVhrdUJhdnpBVWlTQm1GdUY4NTBxcERKVlJrM1JwMDRGeXRNOHNVMWd0ZHFXVF95SklVVUk4TDBUUWQ3RjktMndqd3NMU0FDQzV4TEM3SmdJYnpISXdqS05Mbl95ekNFcjY5UU04T2g5bEo0T081cGhvYmFVR2diMkMzQmppZUI0UGVycGU4Uk9hX2NURXg0QkhaRWdRT0xzekJTaXJQdGk4b0JSdjdKQm5kY1l3YnRrTTNXdXZnOGpGeW50RkpiQ3RGSGNORT0=)
          CERTIFICATE_PRIVATE_KEY: Encrypted(Z0FBQUFBQmd1TUpCQWM0aEtWTHYwSFdHb0lyTFhlajcxZkV5VkhQWWpkVjFnNG1NVGI4YVFfWEdyd1F6YW1LWjIzeENkVWxjNlhRSnQ5OWNqNmdqNm84d3FmdlhFQUNRNmp4Ym1Sckp1enBfUEpKdmJMOURETFFwdFNoVkhuWl9tdGJBNFFyTGw5RXpQMUVjWjBvNFlHUnVSajl6a2RLNWNUN2tUcnlwcUFtUzEzbXpubnJaQVdHODdGWnpTTDVCRlVTTm9feUIybkpyVm14YzRzV29BSV9PNHRoTW1UUUFmbkNtTURIWEVxeHFCTlNDZU5UNzNaaHlJMk8xWFJ4Nlc3cXNwcU1OZmVVdW5SYWpHVVotNkNYVVFYQVZSZ1B1cE9fd05BNzl3TlphZ3VaQjFocy1TTjBXWXQ4NXJubFd0dmFEMnVlODJYYUJrY3RibllNODJsai1BcENlRFM4TmVtNGczM1ZoM1p1UkRNQ1dLZ29IaC1pdlhQN1R0RnlYc2hvT2ZvSzNLakkwYkJKVjJBX0E4R0F6ZGpmQjhMM081U01TU3ZFc0hKZXBRZThzUWRLYks3REowT2JRd1BYeWJCenRaYU5jZU5GNXBXREpRcVBhc3l2V2JOUUw0VWhJb0xCcGM1b3VMdUJzdUhCVnVxNzhFWkFDbE9EREE2YlV5SWdpM1JWYzBmZFUweXFrLWc2Z2ZOenJLLXc0V1hkekZyOVJPSFBPek5nNUdvYjlROWtiNmZ4V1dLQWF5VHdxM0oxS3JZN083YTNfUDFmWmlFcjRreDJjNFBKelEwcTBYVGJraUJWaVRXZ1lJUm8wZWFmN2RMMzNzQTQ3STU2SkM3MVlkRVNQNXZrUmhMN2c2QnEtSzlFVUxISVBCU05Jc1FFNXhGVHp0cmNjTUhDS0FYX3F0S1B5V0pmZGRGRVFEa09ZMGtWY0hHLXBobXl2UDRrYTAzbEhDRkxBN2xpQUs4eWpWekdfQmZwQ2JDbmgzS0JGY0ZlVkgySWIwUHh2c0JzRnFPYm95c256aTBVRmZuYTZaZ19xSDIyX1dmRGZUTmhjTjlGd1BSWlJHbGZsRDNsM00xUkJRTkhUY0xrOG1sQl9Za1AtdjJpMWMxTEJzUTV0eGdwekxtM1hTNXZFY1NPWDR2RWtSWEFwem80S20zYmZqMnFPQnA4akd4aEtvdk1ZOVBBNTFIWVlYS2t1V3ZESFdvNlNHSUdIUG4zU2lXOEJVNEpNUG9kbHFpVDdMR2FtMTZMSE1KNU9sY0gxLVR2c0JuNFNmdnVxMGNTQnFTbGduaF83Y01pNjdKQ3ZVNERCVDBmb3RURGNIOWlPLWhCbDdoaDExTGRDNlJ3Uk5jaXBKQlBiU2hvZnhfRmZQWUJrcGJ5NnJWZ0ZRTEhYNWVVdlhHOHdMVXZHektLbmNRbWt6T21xUEtEN19KTmpSajFfVS1nUEtlQjBWX0d5NjR0dTJERC1pZ3dSOTlBd01NTmthMmtZc1BHa0pqWG14anRlc1R3NGo5d1I1bnpvdm5GbDdLd2E2TVlhWTVycU1Sd1VJdDFXZUl6Y2czaGFtWmI0ZDVBTUlDM3BKMFlsbmxjVVYycC10YVVHcmV0d00tUmdVTUhLWFB6enEzTDMxUGhtLXFUZ3RmOU5qTk5NV254Mkc3WFJnd3FCakc0bndXR0o3LXBNa0Y0cml0cThBdG4zaV9DdmxiOFgtMzk4Zm15Qi1UNmNHVEZJUVFfOFB6Sk1HTkcwQ05UWVRxcWdRXzh5X21qZ1JBbW43QklVU2JwLUVIa1FOZEF3eHVXaDJRaFhDck5hV25iLTZwdDVuZUhwOGNuUzFnRDJ5OEIyNGlaY1ltQnNIWlBQdXVSMDF1empBYTk2RVdlSVJoU2VYQnFyMGVZbnNmUVZhLXhfQnBwTjVfdm5Wc2xodEdrdWEyXzFCZW5PLWNtSjA2ZU9JZjdJQWxBRmhDcUZpQ0JnZTJxWE1lUHpIRVNLU005S0pZVjZKZERqTmdieHVNQkFmQmhrTlJYVmxERnFPal8waDNRYVZUMkZUTGlDZDVGRDlfUTQ1WXFTOGZOdG5vSUx0YVJtbTRSVjZ6bEJDMVZ3TGlNLTVUNFVGenVUQXBRQlBLbVlsN2lFX3BJMHFDbG1kUUFycUlobGdkbzZVdGVmSl9lRjZfOHZXSEF0dWQ1RERzQTNNbW9xdUZmeXFXMklvdEV1SHhPa1VhX0lsM3NXS3p2WHZFOGdWbXNJZXo5UDc4X1VaWlVwbWN6b3o1R243UTJra1ZMc1RtYXk1SWdVUjFuc1U2aW9nSEl2ZEl1TVdEUnNFWUFXSG14WW50a2hfZk5rSWpsdHdQLXNsUGthZmJtcUNvVk0xeEE4bVZTNDRiME9EM0htUmI5Tzh2Umk5bzlqY2Q4cGl5TmVUMXZEQThhUFBpb3M3ZU92N290bUdHSmNya2VhaFBMZXdYSjcyLWdybmRtOFh2ZVFjeUp0WGpkRlJjX3JfQ05yeWFQYm9SX0ZEWUlzUl9SYmpQcGxyV2N6QXlMMW1sUGNOMURYbjA5bDkwazJCZVdPa3diU0tGS3d5VmtGUE1ZMnJyNEtVS2IxUFU0bG1nRS1ZbWVXTzg0ZUVtemctZVNkU0l4YXcydHU2dlhnZVJYNUtrVDFicjBmRE9RZmZsT21vanNLdWFkMlN3VG9PYXBFYkg2VUNTcGxNQkJ4ZzRlOFUyWk5ZMFNzQVg3ejVlVUtDdkpTak1ldTB1LVJjcy12bUhrSU9hVHNLcFRfVXJscV9PSjFjbmZJZ0RDaW9KY0ZyNnZobGt2UThPMkdaZkhiOHBPTTE3WG4xVExRTThwbk1fenJ6RXlwNUtHV3A4UEhRRF8yRkFZd0ZEQjdrNkVsbFh0cy1sVHlyejZ2YjRvTFpjZ0I3UmRVRXdTMmY1N3ROTFpTWnVZZVhBRjBBQUFMR1BjSUgwMUREVElNem1tOGJBcmZ6OWhFR19IOENRcTBWZHh1NTk0RC1oNkJva1dOekhlakhlanhYeVEwbWtDRHVnYkxMZWZiQkxkaDNXOEhFMlR0YVBPX2pab1FnbWZr)
          APPLE_ID_EMAIL: Encrypted(Z0FBQUFBQmd1S0xRNDBqLVQ1UkJac29IeEVxWjZQRmNRbTQ5U1pFb2cyRlEwUHBSMGtnLWZqc3ktRE5VeHJYRnF0TmJDSjh5MDNGM3dGZnI5ZHQ3MzY3bWN2TGJ3RGVnY0pSUnJpRWY4VkZSRWMzaEl1T25nZzQ9)
          APP_SPECIFIC_PASSWORD: Encrypted(Z0FBQUFBQmd1S01mbTZWTnRqbTc0U2tDeGh1TTZkZjQybHNFeUthT3FvaUx1ZXY4eWVkbkxxV1NuaVJrU2lKT3VMY0VWLThBbnVkVEVwZ0xyVThaU0JJMUxORmxyUXVOcnA3Tm1BQzhUeEpxbVVnS1NpWS01TGM9)
          APP_STORE_APP_ID: 1570610860
        xcode: 12.5
        cocoapods: default
      triggering:
        events:
          - push
          - tag
          - pull_request
        branch_patterns:
          - pattern: 'develop'
            include: true
            source: true
      scripts:
        - name: Install pods
          script: |
            pod install     
        - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
          script: |
            keychain initialize
        - name: Fetch signing files
          script: |
            app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_STORE --create
        - name: Use system default keychain
          script: |
            keychain add-certificates
        - name: Set up code signing settings on Xcode project
          script: |
            xcode-project use-profiles
        - name: Increment build number
          script: |
            #!/bin/sh
            set -ex
            agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
        - name: Build ipa for distribution
          working_directory: ios/ios-automatic-code-signing-demo-project        
          script: |
            xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
      artifacts:
        - build/ios/ipa/*.ipa
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
      publishing:
        app_store_connect:   # https://docs.codemagic.io/publishing-yaml/distribution              
          apple_id: $APPLE_ID_EMAIL   
          password: $APP_SPECIFIC_PASSWORD
        email:
            recipients:
              - user1@example.com
            notify:
              success: true
              failure: true
        slack:
            channel: '#builds'
            notify_on_build_start: true    # To receive a notification when a build starts
            notify:
              success: false               # To not receive a notification when a build succeeds
              failure: false               # To not receive a notification when a build fails
    ios-manual-code-signing:
      name: iOS manual code signing
      instance_type: mac_pro
      working_directory: ios/ios-manual-code-signing-demo-project      
      environment:
        vars:
          XCODE_WORKSPACE: "swiftly.xcworkspace" # <-- Put the name of your workspace here. 
          XCODE_SCHEME: "swiftly" # <-- Put the name of your scheme here.
          # Set up env vars for manual codesigning (See - https://docs.codemagic.io/code-signing-yaml/signing-ios/)
          CM_CERTIFICATE: Encrypted(Z0FBQUFBQmd3TFNjcGc2N2RGa1NLSWpIMFVkR0ZMdVl3cnlYOFFPOEgwSlY5dG9WYmVDZ1hkLXRHZXYyWU8xdGlkUDlBM2hqS3ZYNE9HN0RIY0hGclI1NEU0cG01YTNmTUE5RXVPaTY5ZVpCd24yZXNQRFZfajBYZTd2OGxoRTdMU0hFYVRMQ2lXdkNyNzRXWlMtTUZyOW4xQVN4a1pZeG8wZy1iOVFSSkM5dTNGNUhQcTg2SmhHa0ViUk1sZ3V3dnRSMkE0QWowQTBsQzVOdDJKR2FLTmxPLXRKdDktZ19DeGpLTkdIMlhTa1BhWWdYQ2s5bXhjRlVFVEdjeEhMXzh4QU80TEYzVFNma0F1Z2VQYVlpV3hJczUzTWtkMENPZVlFVVlyNEw1b21NUGlkQmxheEtLb2tzOEhxcE1hM20yUWo3d2xMQlhmWEVEVUhoeFlVUHJGblVyMnBkNkVlbUpDTXpKSkN5b3JCS1hVX3ItNHAyNXJxY3NES3ZZdU1VREptZWJEaU9vT0NURkVhSWlERnlhVzZyekZLQ3R1THBxZlpUNXFZbHpnTnU4aVg4UlFwbHA5NThlUnB2REwzMFc2MEZRdHJtekgyZ2dleG5SX1Y5UXFpLXJac1BkZU80b3dTdTBLM1hqdGZqU1dtQ3MwWjBlaldQZDlUQVlXbEhoRnBmc1pxeUNqTFZiMC1jbGJyd2dTcG5IUElRbHZYNkZldmZxV0NyWGVpS3N5ZUg2VE5raUprTFZZRXl6RzE1aFlkeUlQR3pJakl3NkFJSDVoR0tCbk1IRENIZGZDcTdhaUZWR1FhLVNHVnV2ZDdKQ3I2a0ZHcHNKNFRSTnk0RVpOUDB4Nk1RazFfaXBVVm5xU0hTeEJYck1Eejd1TTFhZmhuVklRN3ZoOG9fTTFab3BDTkxqZWI3UWZUNktmdjJMWUFZUzZMRUlwYU1wQ1BSZ3FsUjFMQXhSdkNrTGxxZ0NVTzA4VU93V0xUMndrNFRCMzhpU0ZGZXIzUG1ZQkxwZlJEUzlBRUkyZ0VmWVhTVjhOZUxQTzJaVkVPa21Jei1nb3NPejlVLXlHUnR1aVkyX1p2ME5iNWVhcy1HS2ZwVVhtY1c2M1dqdVpaNnVrRE9xMk5GUVVtYUJIYmxGc0NWVTQwcFFHMTRZUi1LdENRd3RkMmREbmZSZE5GRThOVWJCaGZ5aHBHZXVsMmJOaXdvV0F6TU43a0xvcHRQTjNza0cyTElHRHptdEdXdFlJVGhKNElqeGEwc1ZqWEtlSm5aZ3pyd0hobHgtc0dwRzNlSk1WMWNmWUJpV2FlaHhxZGo2R1NZUzZCX0tETS1kbkRqRlVJQmFZUldjLXpOMWJsRFFoXzJMVmxIZUZZTHgtZnBKSnpEbTh4YnQ4dmxhbEMta2tZSldZTmZzQXFkR2pGb0YwNS1LbUZSU0J1Y0k4LWlfU2E4OEZnQ096ckhIV1F6VmZteU9uVXNwVlNGT25XSFJQYWQ0dG5OTk9LemZzRUdmQnlMRTgyQWV0Z3ZJRk9odmxPMDZXeXZ0YnE5bHNKT2hmZ1VwZUVhV0VyOWtwTVZURmx6QW02RmNGQUpndENKSmdrUkpzWHlEVmFfZWtWTktoUGY1MFNaY1dYWUhfZzdQVFBwckZ3N0d2T0E1TzVVVHNqand0YV9uN284VTZnQ1hWRDEzcFdBUDlTeHVINkt2M1B0dGVHZTJDVkxyZlBoVjJ1elVmdnliU0pzM0NHT3NaMzFfLXR4bWt1UHJRZFFfd3NxZks3YlNWVWpWbTJDeFFpQTdaaDNnOXJBNXRYUThxczNtUDUyelJTdl9YX1ZiVFRIQTg2bFltbEhsaHBzM2RBVElxN21Ub2g5NVFOVEJ6SlFuWHNVcklKeV9zUzdQZTBDeUt1VDJmalMwZkRGcFZ3WkhfcFB3NTVSckxORVRZdnNjZWpEOGozVnBkLWJUVzVCUlo0MjhiSTRCSGc0bnYzUU1PVmltWlE1UXQ5OWpJbnBkNm1BSkFyS1IwZUJuODR3Ymx2SjhVVENVanRVc2pubDBTaHg0Z283R09CMXN3SVlObWpVSjlrOGR1OXd3UkJqN3l3SlJienRTZmhoTGQ3OTRzaFRDTlFCVlEyRm1telFsMG1BVHFweS1XUUFJMXJyRzZFbWJFUEViUEtOc3lQbFpsR01PRU1oTVdHVVNlVWpHOU5TZVhBa0ZCM0xHQl9aMjFwSkdIUTR5Y1I4VC02c1d6T2M2amxLM1FwbW5Kb09nYXFELVFUcHB5NlgxNFVUYmZYN2FTMmdVQWxBZ0w4LUF5Skc2c3hPblA0VF9TY0tMTlNFcTNoUlVOc1lWREdkSUFmeHc3MjJNN2k1WEZnV1R4VnBFMEd4U2hMMjJzSF85WjNTS2NCSzZYbFdGMmhVNW01a3RrVjhGeUtDcndWNjlSb0p3TXh2V1VNQ0RWSnJNUEI3d3VLN3JydkNicmRMYWRXSVBHR0hjWXJCWGhWdVFiVTQ3RGhkLWt1ZGEtMjkyTE9pX3NtMjhfTGRiVmpycXRsY0JDVzUzaHpsZVZXRUpHQUpEdVJqbWN3TzVCMU9PT3kwdWFOSjZXYnpvSW04a2psWHdadWM1Yy1EMzNmamJTWlByaU5vMVRjek0yWEpSU09WZWdqQnplUWZPbUcwcmN1cFJCbWlfTmdleWxacS1sWm95RmhyUGJnX3c0SWxkeEhteDRpbU5adExXSzBmY04wbHF2Uzhkc0t2eGFXV1kzVGRnT3lCQmRfLS12V2o1U3U5STVTTF9nMnVQTlRaSnVfc3VWRXVlMlZKMElRQW5WVXh3Z1FxUUpRN3pENnBoUEgxaGdEdlRZbHl4Mk11dDVHclNLd0I0MUR3ZG5BanJYNHYzNVp6ektkQkVBWm5mUnpzQ3Z5cFFJajVJbkduVFBqdVg5dlFtMTZKWWlvcktraHVqenRKSkVyRUtaNXBuekpxZWVlMFRUVkI4RENZNUlIeUFRMWJNbzVkU3hITGtkbXVYUU85WG5ndmZGWjVBTEM2WjFXc01iNGRqdVBQYzRKQnlvMFF5OVV1bERyN0lQNnlkMUdDR05MZ0MwNXYyXy1ndUI1X2VILXNvdTBmRlVRcVpST1VQZVk3SXRicHBOZzlwV2o1WXVmbGtGSzA0Sy1GZVQxNnEteGJUNHM3Wm5iaktOaHFuWWU0T09Nck9Yc1hGTmZCTDJYNUN4b1cyRnFBOXFYLTdLdHA0VkozZnJ6S3I2b1A4UmJfeUZlVm41bW1UQlhRUmx3V2U5Nk9RU3EzU2RTNXc4RFJkb0R1MDF0VHFOTElFemN3SDJlOEhYalFqeW9pVTdpb1lFVWNFbTZoRE1JWWNWRzJ6TFRIRzFkSHpTNGlsMFVwTkxBalgwVkdXRVB5U2VQakFLOEVXNVhMR2V0cXVHWG5ERjFmdWJobmtaYlBOMDVMcVlrMkdsX3hzN3dIeFFvZGFQemhzREgyczlEM3NDUk9qVUZhUGJPUnpSTGpMbl8tS1VJMGNsRTlLSk1sckRrSW13MUZqdnhfcUtzcF9QWm9GS3hjc09hUGRFUmdWbUdkbzhNZDBkbjZ1bU03LXkxTmRqSmlqZ0tjSVg0SEh6TmhBX2RSd2FIcEpNUW5xU2VzVTBlcm5Xei1IVl9nSkItT0xVc191VlFtY0lZWTZZaWRid3lJZUJuaEc4VXE3UDNySmhyWHJzdGtocUdQMU9nMWVqNlE0YjdPS1dOQWNvOEpoQ1ZlN3ViOTg1OEVBY1Rwem9iazQ0RHFPeVdJSV9QMzROcUlIVzVxWmVZbE5nQWxZSTJQdVZqWU9BNjVBS0REZEFZVEZaaGRxcnZlZk1DZU1QdzdqYndSQi1YamFGUlBzU1RNT2laWkMwdnE4MFotc0E5ZTk1SFpYLXRydkdnLVVPLXd3bDNJUXZ2VTVoNndfcTdfSFZPNU9xSmo2ZWUtejJzOHVlMnpYLVl0LWpDaFlGbngwdWMtRHlrUnJCVUpLS09JTlhWRnY1a0hzRTRKdmZQVGdvVHRPbklNMlQwT0xLOTc5ZXZrNTFCWmFZZ05jV21uaE1TcW5Qa1AwM2xWcEVsRE9mVjlMVWpXSnJSQkhOWWZBQTJNUHU0T2VyNG9DaTdmQXlzOVFiX19hVHBwb3N0TFZtajdoN3A4MU1YR0FQV211clZZWFZGME5LU2pGNjhhbkFDMnU1UFJmd2h1SWRjd3FhVmJSR3ZCVnJXQnMzTEhpcjNSVGJteFk4bk5fWkVqRzgtdFpVVENsRGlySWU1cG9WeGhrbVI4Mlg3UTFYUWJlUXBEdk1wQ3prckMyMUVPLVJmZUlyb2I0WXNZV3lYMjh2dU9ZRVNuVWtlRTlDM1B1VEpKQU4zamotWDN0OFFJZjlVaFpWdnY2cFZ2dkZYcFpMX0dJY3NVTTltSmVfcU8tdHRIRFpFT1VsblhuaUFnNV8yMFM1d0JQMUpuN1lyRmRucjkwMThDWGJRd2c2RHdueGhiYVVlaXRILVd6WE5ZQWRPempmZHlFLVRQa25EbElMNGtzRGZENmdhbDN2LTRwV2hHTVgzMTgtbVlTYWE1U2Y2TDlYNXgydWJYWEJNTldjWm1weUxWNWdLQUpPRnFNY1FOZG5QaWFEMnpUVWlreGZQS1ZJejVuc0JEejJOM0J6ZVBGVVdWaWFKZTRwdG9nbkxvNWR2NUR0Z2QxQmthdGNIekVLbUN4YXNiQ29BMnJTcm1pZjRMSkQtVmVUbGNJTE1KSFRhOVZESUE2blNzLVdMeGphOEstMVEwdkVvaDNMajFoVWVvcVFSb1U3Z3ZFQjRZV004Zmw4bk14azlqdnljN2pGX3ZkcExfMGZRWGx1U3NJVWpxdTlmSkpCUjdtbVdpaWdKbE4yQlJURUNtb3hobTBHUHhmU3NKT3FmeVVXRnFCS242UktUQWhtZFlUWXJKVTlvOGFnNkRjQUQ5R3VkOGFUTjdwRXNINHB1OVllb2ZWLXJxWkE4eTFXMzRpNDhnc1V4MXhuZjBVcmRQeFJVQmlSMFBzZk9QMFBNMTdJUW1Dbi1MZmVvMm15MHJRcHVkam9jTDlSZnpidmlzQmxvMzRrSGZ2RXpsNzVneE5uTWxHaExieERVczI5dHE0Q0ZSdG5iU19VcEZvcER0RjNoclA1V0ZZV0dSU1lZbHk4RU5VRnpJYTBaYzZLdDdPdGFmZTR0V3Iwb1NqV2h6LS12SjR0Ti14RlJOTmVOMmhnSzJSNVNjSHF0aEhIV2xIc0FyZ0s3VDdWdlVEZWtzTEh3ZHZKTFZqSHJSU2RjM1piTWlXTHJhT3hOdHlPbTJDRXR0eWItOEY2TWpDRnN4YVFZZ195dlVLNUJpME9pVGtvekZaakdUWk9YZlNhVGRSNEtFa0pYRkRITzRZNnJwOXRvVUxQQ0RVeEQ4cGhmcWF5ZVlJUnpzSk1FakNBNTRNWnZMeVZsYXFPek45RmhFTVZBdnlrYUwzXzZ1MzRSMjFBVHg3OUQ0YnpwNlZad1E3enBiV2R3dTZ4RkpGT3hZbkQ3Q3k4WFVPaUlROW42MldsdEYxVnFteDBPOEVDNi0wdE9MZVhwekdjV2YyMVNPd2Fwb3BjcjlUTkVOSjhVNHRBQUR4WnBGTU5GRGZyVm1hOGRGQy0wZWJ6ZHk3Q21KRE1pMXloS2xGamtBNjRMVWVXYkl4VEw2OElaeWlRWnpJbDRTNXV6STltTGl3Zkc2TkZjNlpsYnpEYzFUd25GUU03dVF6UDBoNDczREd0UFpINW0wUlh1WGlCQ2RFanJNYU1faFFqZUdaZkZ5UEpLR2JXYWNhWDkxLXllVlB4TV9hZU50Rm00aTBuRnRhRE5fYWFZemI0aHRocldpTG1JOUkyRFFkUzFCVndSY20yTFRra3pFcnY1X1RNVzJSaGZpYmJqeElrbVc5UFh4RjB4S2J0TUVhdHZuYUdPNzV1R2ZjaXpYVmpERzhWRVNQTXplOFlzekdmTEZJdlAyWW9RZ3hzVUloOXZGeHlVY1Ryc3NYQ2JlbDByclJEWkhwdVJ4VkVOYjNnUEFBQ0pIQnM1Y2NESXU3TjVyOGI0WHd2WHB3N1hyblloXzlNaXRJcGFzVGZFUlQweVFHSlhnZnVHaVk3YmthVmxQeHRFQlFCbFRkc21mcGE5LVNJbEl1UjhrRUdVVi1HWFhVSHhTYThWY3dwUkNUeWRaaW5tMndTSVkxVGhtOHFUUTM3bkRRM3NkN0tXUlhiTm1rOFdyZ01IQ2Rab05tOXI5NTVqNDR3UWVaZm5LRVRiSERSMUhWbmFtX05SSExHSDdveHZRMzJqRG1VRkgwZmRfaFZhQkROMlJyeHJWWWVkMXJfeERia1kzc2pFbXVlSkVyazBHemN3QVJhRzVSczZmeENjMTlhcThfdDVEUlhyblJndHZMS0N1Y2FIZkhGUjh3eDEwZHFGOUs0ZDdwOTlSQS13YVQ4NDJxSm84aVlDb3pDVnBmZ2R2WGNkNlVNSW5MZkdqU1RWeWN6dktOOFRtUlRvdlY4QUVXbDBoY21wS2JBQkJ5RW9CTm5qNWVmS2czWDloUjRxTXF4cnk2T3lWZUlWX2RnNE9ITFA2S2N6RFdLLU9SOXhzZGdpTmZoV2tWay1Oc1poVTZCSk84SVlyMnZQbUR6WVd2QnpkN253eVlOTW9PQTY2Nk5WcGZuS2dJZDhRZ2lvM0JGRk9pNXJ5enh5Wk9KNnJBMmxhMm1rMTZpclVIZTB1eUdhbmJ1a3NESUNjdEowd3VxdnRlM2lZTGZPdXBPM2NFVTdqbEhtUXB4dzBjYkhodEhXNUR6dnFuWTJjNXNvRFZWaEV3ZXJMM285aTU3eGx4Z0o1ZlRQcWhhMnUxc1hPYWNQQWNTOExHZ3YwM2FPbjBvMXNIZEpNUnlYdTRFcl9KTF9YN0ZsdkJvaGx3c1l2LVhNMFY2STFrYlZsQ3dnZUx1a0NkT0tQUnFxcXNnUWg0X3FtMkw4TVRYTjlHcHB2WDVYLXpMX2lGd09IYTBFU0tJT2d6ZVJOSjBBbzRpWUZuRUl1Q3JvU2ZWcmltU1dRdC01dkQ0U3B0SU96X0pXYVdFSmJGa3diSFEydUViSmk4Y2VaZ2MtcW9ZeGNSZ0xfS05HMkVoS29jWUdZUktNREpRODBXRUJhd3JXa0hyZGJUZlA4TjRvc2JjUU5sTHFfRlRXRDE3b2pwemVVWG4wQnRzdHlHckpvWVhaVlEtZ1B4Q1gxbFdBN1R5STFrQzhVbFRSUlFqa0ZfNnM0R09WU1oyYVhfdkswXzd0UW9CQkZhcHhVU0RDM3V5TmtseU1ZY2pRQVpvOEtqY1lEVEtJWk93ZVhxWkF4QmJxdThjbTVzUjhfdXhDbjNUY2ZuNGxJWDc2OW81UGRUQUxDWUVqeW1nM3BjUFN5QlhMWWxfaDFvZDhwQWQtMHdMWlpQTFJmMVdXUGxFVVVGQkNhVmFnMVVfVVcyZWFwSWM1YWVBZ0V6bWtwSEZsLTFWbFZXdmNCUkdtUk9YT2Z4Wk5hWTZrNlVhWnpodkROdk4wQUJfVDZOR1JIaGpwZUhIWTVYWm5Xd0xwaEU2NkJDQVl0TEVXM05RWUQ3TU9vaWtwQ0RjUnpnRTdLN1pMTUk4WXJ2RnlmLWRsT1pqd3BFRkNLMnltWDNaOE11V0FsNVloTzZuOHA3UTA0LUdGNlEwZFVDRXIyYTFXaFlvWUFOYUlKT0JRR3dSOD0=)
          CM_PROVISIONING_PROFILE: Encrypted(Z0FBQUFBQmd3TDBzWHl4bjJPUTJJY0lTVEhOclBBOTJpQnFmYjVvaW0xVEZtOUV4WmRsejJoSF9tbWFLSlpRY1kwaER6eFYtNF9nODZvTXByS29qMy1tclZUNDlvdkRQbW1TUURCTVdhU1FtRDR4S0F3R1o1Q3lwdHVxRkJtVjU5VFN2NzVHRmw3YVE3MF9BSnBuX29JdHROczhrY19iNndVSFBvbjFBQk9mbXJwTU55aTB4NFliTVBLa3VPdnE2anZSb0pJclFOV01MazlFTGVydWNWa3BmOUtSa3lNQjJCQWFLSEZRcmY5amlwSHp6RTN4bmhBUUdlVXJ5X3E4b3hMdTNrOTJzZG5ZLUl1d0tBalRFMkJZQ3V3aS1VMmpYR1ZvNXlBb1NRT19wczVXZVU0UVFmSGk4VVdaaHg5VVRSa3NEdE5mcWVFQnZaVHRfdmVKVnVGcm1hYXBEQUw1U0tyOXVoOTdDLWRSMXd1LTVxeTBCNVk5R2xWWS1Iaks3bGI4LU5WemYxMTVhdkRkOUQ5Zk1qSWdWbFEwaVI3NXNIWThZWUZHbjVLN2RicUpnTlNNa1FYOEhVcDg1TTVNQnJhQXVvQ2JmRHA4b0trNGRLWHF6Z0lKVnFvazFITzQxa2JRa0tscVVzVWZYWkZtd3NLR1RSTGRiZm83Q19aS0pyVUVJeENLb1dSS1llSkVHSjJBa3I0bGdGTWwxTjExQjNJYndPMDR5d3VhU0R3akV5czUwbkxESHhia0ZCVFpzNmhVNkhhTDJoVjhBdXZ2NnRuMnpnTWFjYkpyLUR3SUdOdU1IUU1IMEhyYkpVV1dUV0R5RXAwSWozMy1ZUXhTWl9ySnNITldodkZ2ay1lRVNpQzU1a29BOXYxQVlSQWJ3RTdLdVVaNWlCZllTTHlXQVRsTDhxQ3VjRmlad2hqSW8wNDNNZnRzYlJhTE5Iak00TDBBak9lemhnM2taV1pGdG5QdDRQQXlZWVoyOTdTdWYzVXNYTDRfMEFHUE1CMkI0S1d6Y09FWklzamhyNUJ6TXpJQnhWamJQRVk5RnkwUUtEbmpPdU5vWVZJWko5Q2RQM3ZPNm5wMGZqZkxPejFJRW4yd3QwbnA2eFJzT29KZ0poeVAzOVpZa1c3SXhnd0w0NFdCMXMyOXBBcFp5VFpLQkRsZDFYaEdkaUhjOWdieDlXMlZQRmFIeTBxTnVITmVRUTJQcFJJdWRXbG5wQ3dqMW84eTg5NUJXLXJMSjIxX0lmVEY5LXJPczRZSmVGWEJGOFdyMzRMQ3NrSl9QVTNVT2Z4T1ByY19IdDlIUDNYam9DX3doekN3NDNJLUpYWTh3TjVtcFZteXlaREN6dGh4aEtDRGkwV2NYdDNDWlRzYkUtc0FNcGJZcmdrVXl2dGFCNGplclZ6YTNFVFNsLVJzRXB0cjNjQnh0R21KNDdQMnpEUUw5eEhQRWVodTNUdzFBQkx0MXoxVXhCdmZLNmhQQ2NCQlJGS0xmbFg2R1dGbzNObXFPZjFRRkxEN0JFUEdoSngtWXR4ZzhqR2V5eDB1SmkySkhxTUh2Tk05SEJvbmp4YjBZRmYtbUE0NmRJY1lKQ09yMmNrekhFdzZPaVdGSm9OY3lWT2lBN0YzbDFPTHhNaXBlNkdLZDV1VzI0dnYwaUowT2JvZGRBckFITDhDeXducUtMQUUxSS1VOC1pNHF3VWltS3liMmNhZ3RRay1fc0Z6NVNiZ3BZV3pLdkR2aV9id0hUWUpQSmZod25QWDBORmVIbEVDcDlsVnNYWEFzei1zVElCVGlQZGZIc3NUeFFDVHFDTEhmcUFlQ3o2OXF5M25Zb05pQ1R0LWp2TFRoOUIxM1pqbnE5cFJYT1JISFFJUVFpVkFlVU9vdkZ2LThSN3JuSVB1LTBsTDBKWkxWZ2NZZXNURmd1VEZ3RkZmcGJZLTFYZEJzekdlMExsdURWTEN2bW5jWlA5clNORURKNmRGMFhhS0RPRjNqVjctNGF5NXpTdHA5VUhPdnVsSTZMMzgtZHlTTUpBQVdKaUxHZDR6NkVEM05YNl9qZXEtMHE0a1lVUnlGeE85TE9iS1pxRFBBcEM4V0ZQQWxxMHlhTzFUNl9nOHpvc3VwNTlUYUM2LS1kNElJZEx5NzBUWFUxRXduaTdXUkZRTWx1RzlER0trTUFXNWpUdVdSZnkyeXBmRmhwZHNDX3FlNzBzOUlQeXRPNG9UN1NqSEJJZ2haSHpMVGZvODRSYjk0OXI5WTdVOUJQWGdOT0tNYXJBVHRfbmZZZGtBUHZCUFhpREZJRm81WkFNNFR1LVBmU2hwM3BkNGNuY0w3VU1UcjFJWTVMaWZrY0RMV0szaHNNMFdIMHp6NFNWOS1EQ0FiSnZwbGU2dVNRVkN4Ym95QVQ5OGJLZXMzRUNFdFI5YWxfTks1TEtEemJlZVltMldmVkJDMkRYTlAwWVdObEhSQXRtcUxDeTh6dmlYVGpHdTdXYUxsbFJ0WFlpeU91ZEZ2UUsyTkJaZ1hRN1R6ZmY0Q3lPaDBjSGZJc1hvdWFwVTlDWlgtOC1pRkZ3ODdueVFfN0VoSUlyUzRFaXNPNm13dUZPeVh4Q2tjUFNrMWZhVHlTaUtFQzBjNnd2QjhoNENMemhhcjVHS1pXSWNkdVgta0pnOU5yczJaazRhblEtUFByNFVxWlIyaXZOWnhtT0lyaXBrZ3Z2NnhjY29BaG1sT0pVZFFQSVpqOEdQMGEzekFmb3YzTWRUWGdPRHI3aVJpWGVPd0N5aFFSdkUydkRvazdOR2EyN3dSbnhFTmFZSHlvbWlxdGYzakFidmpJdG1IYUZXT0ZMUXpZVFlTbDNwdnAtV1ZrTElrWktoUXNOMEhIOXJUZlRtZmNhdVlQSFhsUXMzZzBQY0RIY3hmbEJ6ZGFWQnZFcHhHWkVFSWh0elpjMUxvSl84b0p5VHVNN0tjSjM0TkgxRlNfc0VoeFc4WGZfUE1ENXQ1OC1tOEpuNnQ4SUdzSEs0VllMRmVpaUY0V25EVTJyX05fR3N2MkV5UkRSamFCTW9Dd3N2OFBTc1VkbkhVT0xVUVdkSDJRODZ6dFpKNFNxcHhOY0JHSTc3Q0g3d2w1TlF2cGJMZkFULVA3c1lEb1NYV1I2bjdPYXR6SzN5OWdFekpId3Qzekotb21qSUNkR2dld3dYLWpyclpmVUpfRkNySC1pemROamcwVG9ET1ZydDBOTjBIWTFFdWJfYUF6M20wcFpKRmg0YjZiMkFoZV9UakFubmd2ZW0ycGFaSGR1QTY0R2txT2JsZjc3UU1wQUlPbXM5b0RqT1BoaURuRGR1eDlleDBYQjJaMjVrRTg4SW41RExaaThnVV85TzhpdzhXaGRFWjZEUE9PY01YYXJyS0lvcWpYQXBvVTFDTHdfb2dwbUREUjdZd2JYb3F6Zm0zYUNzM3R5OHZyVHloeEVFVGF2ckVpSWdDVGVMU0VHR1VWSUExcFJGU1VrZHBHN1pxSENNbWxjakFwNFZpbHMwOGhYeHQ5VGV4alFQemF1UGh0Tm5XcUw2cnZOSEJoNm9BRmltdGszbkRwQ2Z0RUFBYzVOb1ZUWTE3REJzUjR1aW9BbEJiNFJyeHQ3TkdOYzFsbmV1QzJ2a0twalgyN25aZmNxVkVvb0xnSi1qaEpTRjRrNTl1V0toYk4wM2dobDh4V2VDbDg1dm56a2pJNTZSZDE1MXh6T1M0ZWU5bjJGX2MzMlNTV3hnMVdINFB4SS03a1htTE1rN29kellRX0FIdDdhZTYyREw2MzFieGY0T2VJUmg0Y2l6Q3d4Z0dqMlRDVHBqS1dBV0pMUzR6Y3ZLN2xjczRmMEtGMXRWdlVyZEpHcXZ0UEhsWTUzNkRfRUZ1UHdzR0dtTVVSbEx1V2JKN0RDelRzTFBTbms4LTJXWElyUy1ycTF3cnc1ajREVThyTFFUajMyblJGcFhsa2ktOXQ2MzlYUGhOV21QdVBqckhFeWpVREdLaHY2NVdDOXhjYUVfVFUzMi1tNTUtUmk5ZjRCUlZoU3VaeVYxQ29KNDcwWUlSV1duNkM1Mm9UU0ZmX1FfdlVDTTVvWUljWjZHb3hYV0pqNmNkNjZWay1SODNkNmo2dU5QQk1yOUh4dEN2OGxJcFhia2NKU011bWM3MzRISlVZZWpWdHN5YzZrUWFlRGZsUHdSQ0dDQVRQYVc2YWpfbUduRXFHSDJ2ZXA4bXZvMHlGSC1ZYlpBU0w5eUhWMVhmSFNNMnJrSEJvUTZiXzNYWXJVUnF3ZmVDWU5DdVRBMzcwOGI3OWl3VTB0bVRfbllrRXJJdnNYRHQteUEwaklSR2JVanlVMDZ6bndiWlZQZ0VyZmlCeGJweUF5TDhuUV9XX0h6MEF3SllvaTg2Q1Mwa015bXpuVDdUOTl4ajhRaHpHeUZpM0FZY2N5RnRkZk5FSnZOM2dSQzhmcmZlRjJYamJPUHJzS1FBcHNVZlNXcTRxc2s0OVVydkZXVDRZUVUyN0V5S3lxdEI0bVRCZmQ5UTM3TTlHbmFsMHZGYl9QbUtwaFFKZHF4Vl90OTZGQURsZjMzRjg1ajFMOXNoUU1iTGxaQUJPVU9oX0JCTEdiSWVmbnU3eDFrY0JVdlI5LWowYUtzSlBwZUpFYVN3UllRS284RkJvWG9CN0FMcE83VWR3VUttVmpEY3pBcExRQlh2NllmRlA2VTRoZTRDYjhOSG9ROEEybDRRZTZpQi1qa2FDcGpPTjVGM1VjNFhzMkdZczI5TXV0U0lRLWtmd2lkbEVFQmF3cGs5N3oyQ0JKNWNsLVZxai1FeXFFR0hSSFlVSk1qSVU5OTVBNTFJdE9hcVpHalYyb1VFWm1VTmw1R3ozTzM3QmtaLW1CdDZJYUhJZzZfeVVvRVAybHlveUxsdTJ6S0hhZVItemh5WUMyaVBuSUlOaXhadUdBSUZoYXNzQ0hLRWJ3VEMyMk1Fb2V1d09XWVJTcGk1UHFXQkdTMDl2WUs4OGotUl9EMkYyN0M4amNTM0NEQ05jY3pRa2JVVHFBRXQ3YUJvOE00ZW53b05ZS0w3VHB2OHg3UGxYUGNHS09OSkhSMTNMRnAwbzV5Y20tRUQ5NGFGcXlRQjZQNFdiUDdIX0xTai1kY3NUV0ktQllweG9wbDdBcU53MTdBZTZieFJfNDJQcTRaU3Q2R3BSQUlOZl80NVdLN1JzR2RWMDRodWJ2Q2tOS1FkZ0hhYlpOV3ZQVTJjcURpUU9UZnlFU3FCSy0tYjVFN3A2UkFvLWRTNlRyUmQ3VW4zTXgzU3NabTh0LU5NX3A5TE9GOWU2ZFpEczFqdjhPbWNDcmVOMEg3bUpUdEh2em9JMk9WcWVVejZtWm1QWUMweXpLNW05MmJzNDZmRjdqbDlXSEhIZ0h3ZktfOExDSDBURHc5UGFSUGo0MHpVdDBSUldOZlMwN19STnhkcmlxVWE2WUxmeTgxOHZ2UzMweGdnMUtwVUJDMzZhTF9nT0xCZ0hFNDZSSTJzSjhsMmcxRDd6d3N0Y2hqRndTckUzbXBnekY2MTNQQ2V5bm5mUG9FVGRoS2pCaHMyTk9ka0NFTDRsUGRHTkR5VFV3bXhjXzFBdkN5V3pJZFlVRlBtUm5Ob091VnVxRzBQM3hfTnRZRmcxVk1jUnRRTWFkaXJvUnl1T1ZxaS1LNzNWU0J6ODFRUFE4OTVVMUhNMUFLX2FqRjE5RldnYzdRNnJiSzhiT2JjR05PVTVIcXRvNm4wN3k3cmJ2VVpycmh5d0J0NExrcGhMb0F5cExmaTNxdF95S0xJZHIxMFBYNm1fUGpxUVl5eUo0dU51aTdlTUJ0bmQ3LVJjWHBQSkFtMVZhcUxNay0yX29ZNTJwLXBCajBPWDVHVWlhcGVoX1VRZERWRFdEZXRndUZTZ1c4NW9YQlpmWFhwdFBFbGNiT09VQTB4U2R3Z3h0X1ZHZGJzTmhrb0V4ZWlYaHBmeFlwWVJ6UXZpbkZ2NWNXcjg1alJNNXE1UVRFTm8wUjJaN3dCWnRYQWVhbVJ5OUIzXzBsVUtBUTlVNWo4cF9YRjJfTTdCT0R1S3NkM0ZUb3M4ZTNDZXo3YmRuMVhvbFF4clB0ZjBsaTEyekpscjBnOUdVZURJakNmQ3hWUVFmd2x5RkJ3alNGdUxhLVJsTE5WekxCSERsRGNOajh3M19ReWNEa2VVc2dVdkhVTUg3anB1ZUpFaDl1Z2dYbmNidGp0NUJMVGtyZXVzdzREaDNWRldkMEEteEtSX1YxSmJkTk5veDlod01VeUR0OEV0dGdMd0w5dkZ4WDVfdjVUREdQRGI1S1Azc2VYTHUwMDVDQjVsWlhncnpsdzc0VmpvZ3hoZEdYdzFCbHlmNW54TXJ3UlI4Z2tjTkxHREI3Yjhfci01ajVXb2FyWFRHUkZHYWtoNWNOR2FCM01YcGhud2pnN1E3NVV3OUxjd09mQTBSSW52ZHl4ZFlrZ0tRaklUbVVHS0lzMDBzUmJRdFF5R3BMOWxmNXBUM0hFTFFIQlR3YXJMNWlGRHpQbzNuZjQxX1Q3RlVMTFI0VnM1TzYzT2JQVm1QTlNocW9neV9vVEdJODdObW0yd1o3X1M1ajFyNVQxRlIwOG0ta24xTElGRGc1V0IzdGlpSVc0STEtWGpucDRmNS0wQXhGY05jUngwX0NTZ2RoQXo3Z0pNdWhZVUJkakxacUJfZUhkVjVHU2p2RHdqRlo1RHhBX1pHdlhxM1J2SHB5TjlySi1ZeGMzdHNMdE0yMXZpOEJPblQ1RXoyVWtmc0JGTmRVbmU0Z0ItQVgxTW92RkVCNlFNYTBteV9CcnFqemx4ZzZmb0dGalNmZm9SamRZeUtIeHVyMFctZlhIOU1QY1c5elF0dXlvZXBaRFlwczRjR0tWSGhQUzEySkYxem5hUzlzMWV3RnNoN3kyVFJaZ0IzekxFWE1YMWdiVDgxclVuYWRRTGdsZHlJZUZxU1VYS2RQVWJJRGFfcVIyVFpOOTVVM3RocFl6MXVWUEJmSVQ1M2dKUkl2ZHh4X3g0Qk9iRzhCY1NTSmEzV3hHZmxqWVdxd3hLLVJGX2xJMldjeXEwakdoVkxSZmpWeU04bkZObDRkd3FTMkVDMV9GbDQtQmN3dm5vRXBFSXdRWk42ZmJJNC0wN3M1RzFQS1pUV1Q5UVV1NHhQTHA5SWc1STNzLU9ON0dQamU5Q25kYURUc0g2VXhRWWlKbTVzZlRGOFBkOGhNWGRyUGJiaE1iLUlMVlZIRlUyWV9JNDRqMnI1SU1EWWlJUk1DdnFfazllTEoyU3FYclFxcmx4U1Q5MWF3dDFVTks5bjhaenYwOS1kaWZyREhpcUxkQ0g5ZGlXU2tWN0JxdlNROGxjTHBWV0Z6WGJtZkNCZGlwY1hMVXZYclhrZlBqQjJFcVV3MFlpWWFFZXRZMzVVc3AyMkZ1aDBhVTU5QXoxeThrUDdESTIzTThzR0pTOUV2dC1HS2N1QlZLMEluVEhvYUpWUUNqUXZxRDdtZ09QejVEX2dhdXE4anBWWkVaN3V0RVJtSll1X3RlTmhIVVYyZ1BYTUV5WG53bFozalgtajBMVWVVU2p1WDNEWkFhclhRR1ZGYmlYcXc2bHdhS0pDOFQ1b3JNTnc0Z2RkSGFmdVcxRkd2djRSY3plTjY2SVFVbW1vX2w5OC1HNGJkb09qOFN3ZGxXUlI0eVJRc01NZkdTUHRjZXhFT0l5Z2JLUXJLTERENUZ6NE0zNHFyMm9QNzV5UnB2TDBBaG9ZQUhyeW9WMk9rT2Q4a1UzTG9ZcnRwLXpLTXNpajVIUldHdnJKY3FkY1NaUE1adS1zVjk5N3p3cUJ5cmdqZjI2aTNPczFJbDF0bmsyclg5Q0k1U3hMU2lYUnhqUVN1UndyM3Q3VXhjNHRTWV9lSFZtTG5rNnhYNlJGdWwtRkt3UkU5WUhrc0RMUnY0VmluSDFWTjhYOWN3RHF5NWFFSGFBTjZ0NmNSV2RhOFdvdjVfbzhJcmN5N3hURk5zeGl6T1JsRHo4clFMamtvb0FZNjhrc08wZXlWVDdsWS1mdW1CNmJjSnp0VjFyMWRwVXI3R1B6VHFraV9rUVhYaFdzRXNpbVMtcllwVm14VlpvWmxlNXFpZXNJb1RlZFN4WlE1T2lYaUZ6U1h0QlJXMk56MG5BMlBmem1aUVpKelBOelFpYTNwY1RpcGRMRzdXSHdHNkNUNGNwZDFxeDlWQzVVaThCVWgtTk03TEVoN0M1RmpXS195OXZQV3JRRlBSaUJkMGZMdVZQX2pxNE14Tk5ackJaOTZQcHpuNXlNVGhxS3FoYV84U2VrOFhpTFR0RGR0blJzbk1VX0tYck1lWWRNUW83UlYweTgtUkpabGU2c2NHcm5WYnlOSjJXU2wySzhXdkFPTS1ZSGdybUtXR05GWlhGRjJMck5fZVpCRHp2UlRXZkRXNDZld2ZnZUw4aTBlQ3lwa0hIMTJZUjZsakVveXNhamdOcDM4bEktak1vZVlWdnB2OHRJVFRHNVZ6dUJkeTFoQV82SE5nSTJoYWdpejlzYURmQVp2Rm43aUJURDhtZk40VW5VWnNRLS03SVN6Y3pEWnpwYzBrMGFNSzdFeU5oWVJmR3k4UU9XeW80SHpUVlhGd1RkR09yRjRxMjhNbUN3cV9zNFNrY2ZKXy1XMVk4c3ktdEJCTDBfSUg4WjUyd0NnemRHVFNMR0w1S1E5djJtZWNTaEhqXzVtUEpOZV9VelAtLTRURFB4VVVyNUNrckMzNmZQSnVILU55cmNUc21MZHFZSDVKM0E2R3J3QXNJVXNjRjdxaWlEdDcxeFk5eGV2SzdNQ1hDN2VUcDlKYXdzdUc2WDAxNExJRkFLWHYwRm9MOXhoSHpwM1ZtSEZ3dGNlMkQ1ZG1wMUtZbXo0aHZuTS1iWHpITk5ral9wQ051Mk5oMXd2bTZDckVWekNvU3daNG9XYThnbWhxNkExWW9ubXpWNGZxM0tIN3p2VjAtQ2lORFFWSG14OHY2aDFlQ1JGaVdTWU1UcDFtZnFkd1lUTlZ1T3BlWUdJd1JncXF4RzN3NlBWMmU0NVlVVEJuR3JodDFKaWcxbTVxWlZrLVplaHBZbV8wWE1mdXhqWDBTdmhycHAwQUF0ZmZRUWo1SWl0cHpxa3ppbWRJcnBQd0xDSXZFU0JCczNYZW4tNlQ1VnUxRFRMWnpHOWdyaG9LbVNZMENVWmJYdVhjSmRPTF9QRGlhSkliN3YtcnRpVW11cGpmWXpTVTBjLTl3Y050S1JHdGpMampqWlJjY1RiQjdHVUpnWG5UYUxmOFBfTEdBQ2dWdkVfcjk1cjZCZWwyTHZPeGNhU2UydWc1Y3VTZHprQ1lsanljb2FOakV5dkpmUU1ZZnJIRlFIZXRtOGM5N0VYTVExZ3NPWDlRbDhJNWJBVnNpYkZGU2pGRjNPNG5CNG45dWFDT0ZUN0I4RUVkZldTS2JXT0tQTWl2YWJYVmk3UGdGNy1fZ2VUNE5tUXM1X0Q5b2Qta0lLRHR3N2ZQclAzOURfc3pncXplRmhDVHd1STVUQ2Vsd0piZmpQTG9UbkctQ3d6VENCZUl5dDFqZlN1TVVDUlN1eENwZ05HQ0h4VGZ5TFcySTJOY1JTUDdwTUE1TjJKMk9kWWZaN2JIaDVCTk5ZdnBrNjQxNHB2OWpJeU5EeEFTSjJHU0g4T25oNmkxSlJaQUVGUkNVUGx4bXBfeGtXdEtnNjFQcVNlV0FOOFM3N3dYX1NlNXRBekMwRjVXQlh6TWd1NTBhVnQzWmtqQnd3M3Byb0xsckNOR19tVmlwalRxLTg3UHUzYklJcVFCMXRfYXMxV1htdFlYZDNtTVc1V3JqV2MxOGZVeTB0WGQxZDl1VVRRX1ptaDlGM1c3NmVDSU9HZGVsSWxuWlpCWTVVbU5fbWxBbng4OHlxUEEyUHQxU0RoQjNBcm9BUnJMLWtlYnFnQjZyNHNZVUVtdmY3SE00bFZHckpWaGQySkVMdjZnMmx5SW5VMHFNc1RKQUtFOEhIUEY1Uk15dWpoLTlUamtndmFvSTAxeE93MGNsTFNSazRBVGxTdkR4MHJMWWV5cVVDeUxoVThtamhLdVoycjJBTHpHNWdEaXNPT1JRa05oMUtaQmh3NHJxLWdDMDRmU2g3dUFNUkphRDZYOUplRi1iVWNxaktpM09DTmlfZmlUbjJnZkhRWGk5YUc0bE93SnJUeGlWcWJzNTcwakU1XzItQjk0V2ExODlPM3l2b3ZwaU1GYVYyNHNwaHlFSGlBWTZtY1pMZFZUd0ZoY0tDVEJ1b2t4THJncVJ5ZEQ5dzg3SFYyaV9ZMXg5VkdUWXd0RnprMnU3ZERXcHlMYnN5S3RZaGkwVjhVeHBKMWFsOHdjTmxmSTlzZjM2RWFFd3N5S1lkRnNPRE8xcmJvX2VUdm1MQlhGV2JBMlBIbGI5YmxCazlpcGZvVzBEdlpMYlVka0FSMEF5M1I0M1dYTndVMnk0ZDVDTVFPTDRiNG8yOFNuTDR0enNEVWtHOXFvNWhNS3lUV0RQclNNTWE3MXN6MWtpcUwwQ2I0OU85NnJ5RzhobTh3TUtxcmctdjZhZndMbjdLX25SNVVERk5zUy1nazFNVTZuem9GX2xCWmFDemI4cHZYdXFFMHhNRmJUWDZRanBHeWp0STFQbTY4ZTVmMVFyU21wV0RtNV8tN2NYalBYcVJLOGo2bVFRdVlvQmpZNlFRWjZKLVRkM1E4LTZzLTc3VHBVWXhjQXdKY0tIbjV4THlLZEI3TUhwSnh3ZkpudktUX1MzMHBONFBhaUpKVS1nZHlhTEJuRXlNQmdqZGh3Y1Q5NFlkM1ZvMjJfc043d0RsTHlOM3NPcGRWYTZKX3RJZ2Zuc20tYUtxdG1NeDk2d2dDdG0yTVZkRndHazNNYVY1WFBHc0pJdUtQSlZ4WkFrTzEtV2g3dTU3X2tXVlJPR1RQV1plZXRVS01SU0I2bEg2OHdNRVFyUEZrQWJxZFd1QWdqX3hsVE1EX3MyZ0VCVUlqVVVNb3haVm15eGc2UXRJYjFYNHdSTENwd1RZeDJOMjg5emJucDhGM1hUXzNCNlVPd0Vxci1Sdm5Ha2hwc0dPV1E3dTVOUkRzeFc2YmhFLUtXS3FrYkJRZm1EaUVweGNkbzNORkJlaHpyMVhUWF9zakhvcVgxRDRvMjBUNkhNT080dlY5SUdFU2s5R2lMYXJTRmxPZkdsUlExbUc4bGFtOWNURElaZ3I5NnFNZlBxOTlURlk3UkdKaWlJSnlVN1phbWhZcnhsNmltVGt5SXVKZkhXdmt1a2d5ZGtBMnoyS204Z2ZmdmZ3cHNNZE9JRU5rMjBKYXJZQVZwTTQ2U3pkcWNEZkJ6c0VJRTU0Zkp4VGFSUFNWdXBvYU80Zk9FYmV1ejFlaU1nbVZaVGtTblVPUDhtaWd1dEcwVnc5M3ZYSVNGeDN6Q0NZbkdObFk4cTRIXzJkbmhpYkhEbzFEcUpZc1NkOFlVaTZkSW80eTlWdXBpYnRXaERINTZMZi1yT0l2aVJNUk4xQzc2SzN5NFVKMkhwS2tiZU1GQ0VDOFNyTXlNUFBjUU5zRXV3NHZFaU5CeGJuTUhGV1dTSUg2NG1rUFlpM2c4aEFvVXFlZ3QxUnhDS0JRXzl6aVM1SnZSVU5SM1hLOUJCREdoRGl2ZmxISy1FUWJnOThNbXNWc2pRcmlqX1RKTXBmR1pzOFFndnA4Wk52RThMNDlpWEV4Wkd3dklCQUtWTVotaFdPXzBfRU94cmlKSFhMS3JZMGlvUllpR084dEJUS283RjhaY1BmTDdkdGxzMHBmS3Nfb3VuTUdyV1VPc0NBVmVMcXdZYWNCMHJKd0FWNXhOZzZOVDZGelh3VWpWX1RDU3B4S3llUjVmRDhvVkozMFN0WFJpYTYtY0hucW1ZWkV0MG55Z0pQZTlYN3JXS29nMnlPU2VLVmItMEhCU1NxZWFHb0xmaDVmNGp1bmR5NEd0R0FHNk1odUdGZjl1Zm1mYUV1WGVycHZ6SGpvbjVoV3h4MWNNbmUwOEZXN2czVXBrdG5lT3pVRHV3Wi14T2E4MkV6TElkU0l3cWxBRWxXQWdBQlVoR3ltYTF2N00zSl85dzMxX0oyZXB1U1BuWHZ2OVdPbjRsUzF4d1ZaWEJnVjltc1ktS1RLX1k5cTJmU1dGZEV3VDlfYU9zU1BDdWV3MGxYRWphd1pPQkVRdUJSMnJTeFFqWTg1U2dvQU1FSmNFQmlZMW90M01KdDdFSGRCZWlOZ2ZRdkZsR3lqRlJqVXBySXU4R0pmTmxUUTlhaDlUOUNhcU1oSHI3bmJGWFl4QUhUT2pMTDgtRFZ2bUVjTmRoZExLVU5yMkJjT1Y0ZEx2ODJzblRfT0Zld1RGX2FXYXh5UEZONGZCN0o0c093ZEowa3dtSkhiblRoWUlRTVNHa2pqdVhuTEl0cTRxVmZXckpNTnRHUm9wY2RVdHI2MlpOLWRwVWI2bzdOYnVqOFB0bFUzNkViMVFnRXFSWGs5VHpzZmJvUnczSGpLM0h5dXBuMmtJWVdIVUpIaG5lb2NoR3VPdURKbm1raXRTM1pRZUtoekRfX1ZQSm5WOXlpUzEzeTY1VTVFczhtMnpmWDhpZldkekx5b21tanlwbEppckptQ2U0XzlocFFReFVVZ3NMLTUtdm1NSVEyMGNKQ1FyWnpyNFZ2TTFHSkh6VGtrYl9RMVVmdFgtUlBPTVdpc3Q5clhzczl0bHcweHNmN0xLZ1dUNGQ0ZW1XUFBISlJqT3RMOW9ZWU9tSGhnZGdvMTdyTVdoeVRvYUNZQ2VjSnpvcHhELWNMSW1fUmJIMU41aDd4WXd4RUJyQ1lLV3dHNFpjdWFXZWlYZEdQdWR2WnNCbEo2Yms2SXgzQjNXMW1Wek9ZbGxRc29pSmVHQ3VSQlUxLThiVUI0ZlZRMmVfak40MDhiUzU3RmgtZnRtdDNVYlBoZ2IwWS1MbWViS0pOVWV4alJZcFZodVBBYkc5bEM0c3hfaVdnQ0ZqZU41RUpKSGhqejllV1htdXBhelhIeUFUNG5Ed0p3bG9TT2hwd1Rva196NlEtcV9GVS1lNVl0QWFjdFJqNHBnMG4yamluSHJoci1SQmhpbnFwSmtvTkdDcDFCem1SR2RRUndkSjgyOFliT2pJc19GU0N2cmVSRHRoUTFYNV9pM3JmV0V1RlZaa19nZmVnUFNqN3V5bWFrYjRpVEZSX1Z5TDEtV1ZkUVppME4xZThKMW0wY3BtTWdfY3pKY1h2MkJ1Ui1zcV9kR0hTd2dpYnZ3Qk5xc2ZJdHc0Z0xKVFNjYlVEcmp4TWlNRkJqYjR2Y2R2eHlfbU5Ma20zMzQzdHNTLS1Sd3lnOF90UmtRWjJLUmRBelBDdnBua0hRRUtnUFdwNURiWllvV2NzNFJHVGNHVmkzSGZUWHlkQm9pSUpvTlVLSko4dnlqSlFKaTFiVjdyR3hXSzVLTmV5MFJBSXhHZy1fNmZnR2RER1hxZjMwMlA4VFVhR2hCRW1JRHk0X0JWRGJ3Z0RzZUlvYXdVYi1lbTJyc1lHTklVLUt5YzlrZXlqS3h4QThKQUJ5QTBHSGZ4RVBwRW53UXEzUld5NlBCOFNpRURjZGYyald4UHpsWjFxLUhodTBWQVZFQUlQZ2FTSDhta3VhWDdIOEVacVVqbWE0Y1J6bDJhS2lCWEZqdkt5Q2tvNHBNMkw5amZJeGpKZ0ctUFpuQnZ3Zm9VaFp0WURVS1VfVjd3TzZCaENma1lkN3ppaFBfTlNqakhfVGlsOXpuNEloai0xRk5KM3kyVHp1NzVCOVBIZTBjb0JqLWhaN0hmWmhFcWxqcTZSRGlmVzQxaUF1NjVHZmc5ZU43RDI0MDdvM3JDZWVveURtc1dPQ25VUXBLTG9CSVZwSlFhNFozbk9VeVN4ak11NVlkU25HMXFNMHZmcmxWdGJTYVVsZmJBYUdvdlh1Mm8yWWp4eUxaSUN5ZndxN05NRHhudGhOdFVvVXRSbVBvUGZoTDZ0N0VXVjF1a3FKeWJFM2dhUEQtN1ZDeVJQNTRNN2hyR0F4SHVyVC1oaUEyNklyMzZsUjRZSUdZQ1hQT0pRTldFZ09EUmdXN1pXaWRqMlNmYjJGOEZvWko5ejJhNmlOZVlQOTJaUlQya1dPUEdKTTI1aGQyclVMSVM4cjhadkFlYWZxdzhuU1dDM0tPeENYNEFnV0lCeloza3JOc0d5QUc4eVZkWk5XdzUzRHhKNlRRV3VYNlh3RWJsc2Z1eExpSk9fZlBkUS11UkJkcW5DSG4zT3VzYkxFdkQya2F2T0pHRU0zVEJTbTNzTDVDREt6NHNqSGNBYmdGR25ObGVpX3JGVENydjBLRE5jeHF1N1hwb3ZhT3RoNDJCQ29FQVFVZXNTMDJYYjVJWG5sYTFUOVZyanF0MmU3Y0lRejVpR01YWTZXS1AzbXZBM0p1Y1VmSHp0QUFpaFZ4VXl5akdxOTJ1cEI2VHUtaXdiNm9yWlVBSmZ0WVdCSlBNOGdmb21TVmdhdTJsUXlBOEFrYjZTSXE5MGRHLW04QWdMLVZvUzRsWGdtZ1lsYmhLUUhWY3JSd1JiTzJGelcySUxiRXVrODcxRDBzSUFWYllXUW9seE5NbXJsZU1rdnFkSUJQZGdNWG54eEV6TW1RQVQzNmhLbm9weGdnUjQ1TnhvX0pHS2pEMDMxOVduam5pcTAxVlFHM0NWTG5hRjlMOHFIcVF4NmdfampGcEpVUU0wLTVIU0J5WnRRNmhySlBkbWM4ZUxYMTBRdXM4QmhPNWduMjRHYzZiX0pIRW44NXU4azctYkdwcEpvbVVBTUgxSHVCTzNRdmZNdkFuOEhWUWlqeHRhVUJwdXhTeXZReWpqOFZYTzFPNmwyVEZBWnpQVHh1OTNKUFkxdlRQM2lGLW44VWZ4cnFBRjV2U2M1ZWktTmlPSXo4Znp1aUhfa0xMZUp6TTY4WTMzVlZya29UQWtrRW4xdzBVLXdpQm1PVW5iSTJJenJLOW5NOV9hams5ay1qaW5QdUxhR3ZCR2V0MDRfaXliSWhCMDVwSV9xVTNqb01yRzVHbTFFcTktLW9RaUJBNjRRcUZIZkpwdjl0ZXpLM1VBUnlEZWEyZldTWmw1eWlyMjJSOVlMaGY1OE5jaHp0VDNid245X19LdnIwSDdVbkJSdFlTVXFRdC15bUZLTnBucnRJbUw4aHpUUVlQMjdQVU9qcnZXMTZMcDRDYTBGcHVhZFpOeDRjWWttNjlQZEUwdURhRHZBOWtZVURwRlZ6aHE0MUN2WjQxdFdncnBGczEtSFlvc21GMUxOR1Y3RTVqbmdSOXhnQXpqM2tTWFIyOXhkUkptNHg4aV82VW9ZMVZZWTlKRFp4X2R1RWlhZF9xZEc4S052d1FsUVJPZmhZcmo0YVBGczl3VHFTZUprZVlIRE03NjVqbHdMSDYzV1Z6a1pNQklGZjdQaGgwMTdLLVpvX2tvZDEwTk96MEtqWF9NeDQwZ20xYmdpTG9MRVhiczRXS0FpdjBVMEZsSHo3OFRmckJMWVZ6OE0yNENYYVFyaDlTOVA5ZEdBeEJBRGFVc0ppaFNCUWZoc08xY0pGWFlhUTdLVW9LbWVSeWthdXJCTkp6Q1Y0ZkFjQ25TX0hXbnIyR1lNZ3ExZzgtTVM4MktUUGlrczVfY2NpX2RHYmpJVjZfWjFqdlowNk5HaXNZcllzYWxjY3QyTWFROFFYN1BGRk1FM3FIeVlJd3BXaFc5YW54RE81aWpaeXdscmVLVkJzN1hXWndWQ0Rpb1JGTG9yRWtQdUpVT1loamRudF90bXdGNU1vVXYtMlAwUTBMQ0gwdy1uSzRJTGdJNmZWTDQwbDRkWTdqT2FsdFVRUUF2MUpiM2I1emlvVGZhcW40a29fZHlqaklBQ29ta2ZfcnQ0dTBzSzNlajh6ZURhN0RUNVRncUQ4YjQtYm5nbFNaM3hSRU1XX3NoWEdWOVJjMmZwM0xKVEozNWU0aC15c0dKVm9jTjBsZ1gwVTlhWk9YcTBYY1FBUU9CdFpjdjRWdDhLTTZIQmdiMnhxejBzNlBrRVQzbGlkNkxxWVRFLTQwN2lmSXdlRTNUVEhETkl4UVlfTTNBZDg0eFA3MGc1Q2xCdC0zR2JLVllPbzlVeDVPOWFYcERpNE8wMlFSek0wbTlLSWIzbktMRDBqdGNBTXc0R0gtMHdrTzMwM2trVXp4eE8tUlhIbTBmZmRIc2I4OEtaMHdaUmNzSnE4eWJvR2Z5VjZ6SXItMDUyNm9pTkVuOWRtZk9VazhtNWNBbjVYWkhsSFVzMnQ1NVpkOVRURUF5cVIyTXZyNHVfb0ZnQXdQdzYyVlBzM2JHQm9vQk5seDRNcTdqcXZpOFl4QWVwY1dBTDlld25nTWIyU3c3M3BsV0JicE91Uml4LVJ5QUk0ejVUa3o1a0ozd0g4OTBLM3AwOGZ1eTN4SE8tQVk4ZXBhT1RnZF9ObHRWNEE3UnQ1LXRXYlZiNW9QQ0g0aVNEekJGZ1p3bU54Zlo3ZlloMzRYOW11bHd6UDNDYXREakpLWlUwbVBoY0hXYnEtNHlrcmY1TGRkNVM5dmV6d3RMcmRpdXQzSGFFdGxjQVhWWWlNMzZVUUdqQlhyb3hDcFc0WEtfOVVwMEZEaWRTYXRVdDFHenRlZWRoc0pmazdxMGIzY2xueW05ejdXUkhCVkNPN25VSWVxaHVtc0ZFVkVyNzdyTldJanBvQ2drVEl6QmdKdGJmVm5TUEo4dmFYbm4yLWFXa3g5alhZcW43S09iY3p1d3JKb2dSa2N2a04ySDZHMmVnMEFyaTVMX3duU2RweHdJSXBkY1JXNkhBdUVrV1owNmlVX1NvYlZiT3NVb0Fhc3g3Njh5SWE5Ul9xWWxDbDBxTWNKajZPSHhVTVpvNmM0NWlIM2JGWE9UV1kycjlCNnd2bjZVZm9SLXhvcVM5UG1ZblR5MEhMaVVYWHplS1pnbzJlWXBfNWt0V18zUEcyQkkydE5Vbkc2TWVja2p2MWlWN3gxM0oyanV2eHNET093NjVFekdwenQ5VUpNQWROTUxMN1NjVmkzdEVJR0plbG9UdUMza08xcmVXYTA3NXhrUVFiX243bWotY2ZMWWNRdWVwME9YSHRXNGludERteWNIdkNfUTFaU2I0ejhDeGowMERsYThja2x5U0UwUDNSRUZPd1BzWmRIb0QtWWJCT1FocVpLd25NYXNjTldxOTlSTGtmbi03TzA5UUFQTGtQLXZoM3UwWXRZRjNBWE8wdGsyUm45SHFRWWJBWVpBSkh3RHBIN2RsOVVmQzBUYXFzWFZsb3FzNjVnZE9fdW1QRzA2NDFHUksxTUpCTU44TWJ1ZFNZM1luNzJFSTh2Z1V3X1k2cTBwM21DbGEwSE50am9Db1BFclZwOGFiSmU0Q0U2VUV1VWR0TE1jYkQxVFEzWDI2WWZpTk16OFd3MEY1UGh5TVFfMUExUnlDMm1FQ3Q1R1ZCUWFUUnYxSVRrQlNjdXo4cjNzQ0Y0eTJDOWdhVVVMVmxUMGZ2Vjd5d0NDR1NwQzF5b2lXM0ZZOHVvRFZDMThPWi1IVTBOUm0wcHBYZmlQUXBUXzhOME1XSk8ydm5hYUtpbF82bTZmeFN2dDF3MW5SLWtORzRVT0NYLWhUcTJGVXVYWVMybVNwcm1neUhfM01qc01Gb3ZrQUZVVU10WHNKM00xbE9KMW4wT096LVdpd1JwMTFDM2dBN1I0bDdGWU9la3JpQkhyekRCd2FMYXBzNlpDT3dQeGdNaUFFZk4yZmV5eklwbDVTaGt0UDRySlRGdTY2THdRbzJkd3ByVDR0dnRVa1JUQmRndm1HSGRJV3R2czg1c21pbFJEWDNTNUhLb2VlazdtTk9LTlR5MTFBMm90VzJIVVlmTG5TVFp4d2Z1NVVxaFRiWWV3VHR3UVE3Y0k5b3BPVjJFU2FURHQzVlUyNDROUS03QnRmZVN1TThGNmxKZXJGQ1hMcVBxOGctZm1aUFRkNUVZYzBEZHEyMGxaVFZpeXRxOW1mSWpuU1ZLb0tDZFdLbllKSGgwU051MzlwMEN2aEQzcVhnQWNkbl84cGxhbEhhcTRFd1dPekVRQ2RXVnprd1ZwOGZKNlVHUnlQVXJjYzViMkhQREs3ZE9xaGdrSmVIUDl3SXZxcldqVGdYdnYxLW9PVF93ZjFuSGJtWnBudmFvOUVVZzRDN3owUlJZNTBiS2FjOFRTZGZnMUpoZTZfNmN2T3AxQl9xd0tINFp1QkVQT0JkaHRVTDV2ZUNqUVhnSEF2aDVET0R2VXVuWUhJTmE1TzRCSHhpY0EzSVl3THN5R2tBRzZ4aGZYNU1tc0lrNm40WS1VYjBLNU1TUDdRaXBUOFAtSDlGMF9Wbm8zYUN0NmZGYURyOHNuOXlUUVEtVlp2c0lrOGxtX0xDMExZVFg4MVp1X1lIZlhFTG1GQ2xwNU1EQ2pRTEZXU1NaZXRLX1JvRk5IZnpEM1FJMDI5MXlJa29wR2pBbnZyaUFERjh0YzNNSjRMT0dhcVpvVFY0dGdEUXRBcVNfRzQtSlNMUmo4Z0RkRjhkZkFETEFaaHpDN0hqUkh3aEhqdUZQNDR1TTMzcVlBZVFiZmFTc29UeTZBdFR0TlJraU5rMFk3dUZYRS14SThObW5BOTJNZEtGczV2Q0JhODJ2WndySEc1VkFYdmhRN0FsN1VOVGNVc3k0WnZReG1iQlpfSVZCNGNkd3BsZlJyU2MySFFHaDdXblVOek1ueHR3YWZRdEdCcHJyLU1jbUg4WHhRM1JDcUlVOU5XZV9ERnF6azg3bXhnV3FSWFBzckNUU2dRQlA1d3RMRjIwTk9vRl9tbnZzYmpaYzNySjFNeUpqcWJsVGdiR002TE5QZ0h2T3lUbS1Nb1N1SFBmb0dxb2NsWWRlQjd2SFpLYVhfdFNGbWlyQkx0bXNqZV9VNjZXNWI1bW40Ymx5VUszM3k0RDZYSndUbVR6cGlxWjRXMzd6MEg1SnFBeGpfVGZVenM2RzFpMkFoblRiazZ3a0Z5OVFFQ3N1R2R5cENuT3JpQ1ROeHJ3UzZEdXNIbEl3MldtT3NvR2h6eEg4Y1NhMDB5Uk9kZFo2Q3k5cVFJbDhSSlEta1hCMkhmTExqcF94Qi1HbWdmaWhYOW9QSUFNX2s5Q0kycFpVaThQWGtvX1VoNkl4STZuS1dBU1p3ZDJWdU5KU1lyR3NPRkRZSXRWUWxtQXU2b2xHc1BJemdSZWl1RktJTlNIeldXdF9icFpVc1lyQnVXanpMZDhhX3E1RFM5dEppMEd5NHNyeUY5NmhxcFE2RFhlTEtfYmpWOF82RjV2cnVuWUVDUllXcnNKeVRYYmJfa1Vjbmw3LTJMa3QwU3JJck9KVEpMYWdMQ01JeUFtNG5OanJqZTF2ZHFMQV95SWxIZFJNbXhZQVNEa05neHBnRVJibXVSU3lBdVRDQUN3dUZJZEFpcDVQUHhNWWpyS1VlMS1OQlNzWGtYMER5MEI1VTZWQ1F6LXNycFJTQVFQY0l3Rm9sMW5Zbi1WTi15V1hWWFo5ZGFDclhjTThaSmdMNUFncHBfU1RLTjBiMXlrVWQtbzYzcFNKeEg2LVJ5bUwtaXIyYmZrMUNXUzJpRnprd21PUVpWbHdSbm9ncGdGTV9FVGw4TGJjMmRUN3BkQ2hzWkJpX3FvVzhPM1I0NEN6Q2JOV3phcFYya3NkUXVQcHdsS0pTWGhIVC10SVZDbFk1SHpLMVkzM09TTjBOOWZ6QWZnSWlTdnE3d19FdmFSUzVCZk9BejBVZWZuel9uWkpXY05mU2ZsaUMtRWdlWnEwQ21mc096XzhGb2xFYmU3bU5LMUJQYnA2RGstYTRiYjVGUlZicDl0MDI3enFhcEczSllmSU9HV0dpN3FpVmFndEhoeFJyUU15TEhBZ1J4T2xqTU0tMW9uR0xsM1d5REFCQW5QcG5EREdqX2F5M0s2ZldEQkp5c3JELWY5bHBOOHZzMkhhODFKWEpvVmJUaEpQWFBVb3U1NG9rQTBpUEFSSHRZdTVyYV9zT0M2bTFZNXRfRXQteU9Md1RtZ3hKTTdtRzMxcG56Q1VRb1ByNzVKT2lNa3k0TXNTalFZM0FGSHIyTGVfWjc3TkhMcFk5OUNVcE5CY0QwZGtYV0xyN1BlR0NBNW9hajZTQThJRldlQTV2VkVLaHJuNHgwYUFxbmh2ZjhnVk05VExlcktlRkNGX0E2VUhWTW9uektLUHB6SVF1RUlNZ2dLcURXSzJ6cm9VTl9hRVNiMDVhMmhVRk9td2NqcUYxYWpHRVRhZ3FPSVVpdElQdVlTTGh0WmNYMTExU0pBeVhGN2R5UTdSbGF4dk45V3JGcG1WbkZ0OC1rem1kMG9lMGFDQUFoQ1d4VmhpRWk3bkZ3Rks0dDdkdUpnQWE4NWJhYnNYRW5hQkFJVFBaMXRXZkhmcXYyUkhUcVU4RUdQUlIzTzJEd2k1TFAxYVpkaFc2MS1wejhyX2J5T2Nac0RobUx2SEx3MGl4bk9rREdwMW9FdDJ3OXRETVZtLURvaFM4S0NpdklzeVJKU2lVTG5RcUZDTThTVDJPMS0tUnVTbEFDRnloMG04ek80LTVOS2VrNXhHSUNCVTB3Nzg4bG1pNEJJbG1UY2tuQUdmQ0pGekcyVllYZ2lUejZQZjI1WGg1N2g3cXlRMnFuLVh6aGZhUE5yckY2enVmSzZZY2lkRUxmWXZYQTZhWXRONVlGcjJDOW5nN2ptdGZPYmFKdXUxeGlDR2dsTnNlT1A0M2xPX1hmUjBxSWltZDg1OS1lMEV6NGVKaF9VLV9mcTJVLTI1aVVyQjRZaVpZemg3VkdlOVIxX2tOdmtoZ3ltaEM3LTdZeXpNYXlTWndxX3lzQ09DUXFtdXgydUpzYloybzhFcDEwaDJWOVFmLU90YVFzN2RwaExPYnFDWXg1cGl6SFpWTHI3Tk5TZURwUnllVVQ2aVIza3dxOXZlcTdFemdVRS1PSmd4SjlqQXpNZWhJOEJBVmx3RXA5WEhCa09qekVmcThwM2lWZ3hFSUVSaVlvMXEzRXRITFg5MHhqRWtaX2hkckdRLUZGOHZocEt6OU5KRzVJMWFZRjM3Q1BBQ1ZZVXdhbnhBLWR6VDlhVDJOUFdGWkk3VUR3dzgxMTBKc2o2bXJ3VVFna3hoWWJ4cUswOXROUUFSYjZtZmNpdjlYUHJPcWx0UFNEMjRkZTBENTRhclJ6bzBTLV8tdFFNa3BXX0tadF92TUUtM3AtaEhRdWdVXzUyWTU4a3BwQ05JVFhTbUQzVmJ5NDdVdHh5ZWNSUnhuSy1iRE9IUXZ5Vm9ueFFXZko1el9CdE5ObzUtbnRqUng5WkJXLWpWem9zMHp5bjVVbzE3cERkWWZrdVVPNGJ2NWhHZmgzWHhXc0l3SUlnUlNjakh2aVhOTUg2MkpFZ0dUWGlqZ21QaVhaLVFKT0lBWjhpVWk4bHgxNm1xcFdtZl9nYUdSU0JJdld1cmdhd1BHbXZIcTJCazVNbjVmajZlNzlvdnRiMjdQM04yQnhuQm9NT1YwM2thUUFjSmpEakdWbFpuUndwTTlER2pXQzMta25JM0paMEJhMEhrTFNqdklORHRPLXJTaXM5Y3hrRG9WMlZORnNOblNmSG0yaGVfQjVfbVBVWTVMbF9ja0FnNmJYZGtJcWxRcEMybDhsT3FHanNvRm5KTmRpSkNPMjhLTVNwdjFfbGlmUUpDZ2hYZi1NM2gydkhZaVRCR0dodVc4bjZXRjdhMENlb3l2V056RHRFaXF5aUZHazZWeGZETHExeTBCRVozZ0ZEbXBJZUdxdk9ZNnpLN0thYjJvTFdKMWV1OWkzOTVQY2s2ZlFRckV2elBHNmwtc2gtRVlsZXZ1LTQwMmtZM25MUnZGc1NqU0FoNVIxSkhjc3oyODEwcnVYcjV2czU1N1RNTGtub3Vob2lYamJNbkU1bTNuX3pRYmN4TEhSQ3FNRzdVdWlDazFMX2JZdDI0c2N0Uk13cURSQWVrNzVFUmNCRl9zOFlMaEMzOXh0VlpIZ3lrQzVtRHRwMUxMY0F1V2RvQUxRelZ2Z2x4X0plbDhmNGQ0THR0dGxITTdmeE40aHBGcFFVOURKSll5Z2NlNlBPMXkyak9PeHpWV09Sc25zZkZWVV92eXk5Y1VxZWVUUTBLeWxJdmdVcjdIMzZ3WDBXbk1wRFFYNl9HOS14UUpxdEFBUFU2VDNZaEliVVlwcHVsbVhMY2F1akRPNHRlUEs4V2I2Y0ZuV3Z2bGZQM2xNbnpJSWRxV2x3MnpOOWVxQkR2blFBSEtaSGRBc0ZKYW5hSFZjaWhrODVhZ21hN2llMGhWN3BBVjAxQnlhT3V5RVBGaE1RSVRQMEVoVnRWSnIxUEMtZE9va0pfaTJhZ196OFQzMnBqZ29udDBEX1liQ1M5UjdKUzJnU1FzU3ozY2c2TEdTei1BaVg3bG5meGlZMHZ0QjRxUGVNWHpVSHY0a2s5eEtUa2xhVHlmdkNPUElPNC1DM2UwLWk0X3dWb1BmTFNsc2o3QU5QTDZRdl9MWnBrakxWT1o3eGR1NUw1REFwS1JSUGlwOXpqaFFIVnFBdmo1VENxeGg1QWd3eXBwVDlnN0hmZnF2VnhMcm5fVExjYkNOZHNac2FwRjc2Z1BqQnFXNXpCYmRqT2JfSS1YM0Eza3czT05XWWNlRzFjWDBlcWw1WHMtM25nTWFIaTcwWmp1a3dRMVFzcGtPdUQ3Z2VjcnBjakszVHN5T3ZmVFBneEtrYUJhVFlxYUJoYWFfOGRXM2hNNVBRcS01Slo5Rzh5SFFBT1FsSnVxX3lId0d0ZVRIbmNveTFyVmp5ZHZRdjdfQWFHWWNoZ1d0cWExNGgyc0drQU15SFlYcTc4Vm9FR0xLWVk4UGUwNC01LXNpSE1qNlVnTGVhbGpUSlFiN2k0NTdqSmRFQm1EaTkzMDBYOW1ZdEw4RDNnNlJ3dVh3djNtYTNfc2hvdVl5Q1BFN3REVmdOb2xYZHE3WnFwVVlUME5YdWY5dnNESThoMnJBQnlGcTMtTG5qUnNoOUYyNjgtTEhVbjZ4OEZpNlljNTJmdXE4SXFoYzk0YW41QmVsbHo3cWlSb0Q2c244UmQteG5YVEtKSUE2ZmdHTFZlZHhudmlDRWZpUEwtYzBUU09HUE9veWMwNDdGaThpYTYzVHRERzRRemNacUcxUjRkRTJWNHdoLUJmWlNjZWFKRUxDZVl5enJFOHNpX1l3TVVmZXctekdYOGp3bGVNeHJSRGR4cTlXZVl4YjExNTJkMDZGdGRNVm14TlVwTllIZzhtZVFCTVpkNlJkak5jVENIUUNjU2hVbEVwM0s5a3VtWTFHX2FILWZlUUprUjJMa2FiNVB6Mmd5dWJSOTFMenNZLWZKYnluZVBNZk5OTGNLMHVDalVwdjdldW4yeWZfVzNxcGp3SmhEZlpRS05xbG5HRzR0cjFIZ1E2MzAyN2pBUk1VNVZNQnVFcmMyOEFLWXZkZzNMdDFuUHBEdHJYM2NRQVVHcHdyTHVuUncwRldJUXZ6eDVMdF95T2tJdmhZOFNYamlVbE9qWnEyM05GWEd2aGF1YzVJUm9JX2RBc1BpdTEyVDJUanVhSFlDSVJZRUxTUWNVSUJTMnZ2dlVNb3M1ZFZJb3hjYjdkWGtWQmtadUJVZzNhOHFYdmFYTWR1cDlyQTJPcVlKYVNFX3d0NkNHRXh6TnZfdWYweUE2UXdrRnJIbkFxMTJRRldqUG96VUZqbkFOckROeE1XazU5b1NNcDNPOTdrOXR6cmYya1g2a0gxX2RseFh5TVQ0YXRNUm1wemsxRC1YY0JlUXFYeG5qSzlJenhMOERySGVLNFZ4VDhlMnJ3RFJvVzYyLTVFMHZhaHJLemxxbE1YMVc2anpLR3pfWk4wYXVFZTR6bkVuT2xzSHFrZzkycjUtYlBkeF85ZWV1Ny1nZWdaekZ0dVh4QUx2TTJBM0RkdHYtMnZiUk81cjNKanRLU3JGT1NNb3o2eWFWOV9OSDNrWWtzSXZELUhqZFI4bW9NRHk1WEpQYy1pUmUxT1BxOW5MZkVla1pKSFFNVEtTZDJUZ3FyblhneXdDU19YdFJpaDJPeVVEejVWNVdPQnhJaGVjaVVyM2x6SnJ6d1BZNHd2aXAyZS1oemtuMlpFcV9SUUxnaFJxRG5jcUlMWVUtemVULURyaTB2bnlxQTFFeWU4X0RnVGx0N2M2ZHh3RE1OS3ZxMS1HcnRHTEJpaV9sQ2MwV0gtNExlZ0RDRTFJWjktNnUtTHV6MmtpejU1N0NXdi05SmQyYWFfZ25IdjF2VXVzTkpacERMTjNGWkpEVVhHRm1NVXZIcVk1NHlZMEVHcHVKLTBHcHFGSnhHN3V4aF9Dd0JaLWVFb250dWZ6T2VkQjJyeWFHa2JjWDdRWGozTUdCZmczYzVTVWJtc0Y2ZTRpSnI4WG9UODJUZjdMaG93THhFeGY4ZTNkOEZkRl9KOVd5eWpoVktXa0Rka1NfclJaa3Q2Nlo3VUNhT2xtU05IaVdFOEZIZnc4ZVdnQmdIdWVaVlRtRnh3SUJJSE95dnJUalplNUt3Z205ZnF1SkJ4RjhkckxBQmJsR2pfTW5EcV8wV1ZUQ0l6RDBHWjllRUVObjZ6ZTg2TlYyZWxZVW5WVlpqNjgybllaVTYyYVdSY01CRlVUS28tcXlfNjNOal8xdzlSc25zeW5vY2ptWjljTlQ2Q0FQZmVjX0hwSU1Pb1J2b3Q0MUZ5RFVYTGc0QlQ2OWhaam9qenlJRmkwdktmYmdqWTBiOGdoVG5MdmVyZDA2TmlSMm8xY1BYVXBqSXQwRGhQOURDTVFSd2cyY3FLZU5RZTZUQXhlaHJXLU95Nm5NRnpacjB6RjdRWmdDQjFJaEV6aUk4NG91ZllBV25kQkdvUzJ0Z3NOandzNXhvY1IwQmdYWW9GQUJEOGcxcVRiSlZzTE9DaGdDakUtWTRhOTJJN2xkQlBSMExTZldqRjJ4QWFoNFNsak5DcEJfZ2pYaU9CTk9UNG9HY0VNOVFGVzMxVmxPYzJjclp5RE1INkllMWpqd2hJckl2bDUzaE9XVTVFRjNxOC03MF9MQUg1Z2tGc3VnVkRTZXZ5SjNLa2VOT3JCd2JSSmxSX1J4NE5hVHNYU1lMenVmdnVjMkNXV1FlNnpaYWR3Tm4xQ2lnZnRuZ1kxWng4a1ZNTlN5WDk4NUR1QlhERUUyenVhVW5Ybjg2dnctUW5jeW1WWWxzNlMzWUhTcWhHdlhyTmJVZUYtMlRjRjBZRVQ3cWN2clZ2NV9LeHp1b0xDMTN0cTc0Z2FJMWdDVlYxd19nMExmUnlZRzVKR1Bqb053N2F1S1ZhRVVDMkxYamtjZ0Q2WTNWQkpwdmFoaEdlYVBXQ0k3aHNzakdmYnI5VVNwVmhYZXBPaEVHdFNxbFUzY0g5djRpb0J1NDNFREI1UXlTbnlGbWxHakxFOVhfbGoyWmhBZ3VBVE1lMFc2eDFSbUVaY3lOYXhDcUtmeWE4TTQtZmFYNlBRRDNHYnVMQV9uUnFwbEF3djV3d2VxRG5rNUZ2RzNFaVNUNDhlTDd0Z24tMHVBSlZUaGZWNWpyNS1SQVRsSHNUcUtzSXRFai1HbWJaRl91WUJDNmt5MDdSbnRuWkhvME9adkQ2T1FWMzd1V2hmY2tZZ2R6TThsZUpTZEcxdEh0S3NlZTRwaVdjOGxwQTdJM0oyb2lWWkNrbUM1Rm9BSW5yTjRwSjB1RzVPM0QtQW43NmdDOHJ3eWZKeWVYRi1FX1Z0TS1GSkpISDJwcnEtY2N0Y0tUZEFyWGdDTG50aWlVOXRvSmNtTTdlMmhJcFV2cExldVVkbzU4czZMWTRBay0wXzJ3UERzdTl5X1NvQjRrOG9UN1M1aTVxSE1jdGlhVWZYNlRoamNZRGpIQlhwakNFZmRwZjBZaXJLY2VBLU1LX2ROUUhXS0dNU015bU5uVkExU0xWVkI4OWlEWGhhZzZQS3hxYXpraEFoN0xPeTFlUmRwWUxvTEZpaG9FLVMwNDFPUl9BR01KT3hYYU5UZlVXSzRRZHRwWmp3czRlM0lTT00tZUt3VDNjMGUwdk5TQnR1VE5YaG9aWmY5ckg0X3VPXzMwWWJSOEhPQWRIWmZFNmRJQ2I1SHhvNTZZMHlMMkNSNkhOb2oxVzdoSU9CZ01pV0xVTFdwZ29qT3hnWHpuSEFfSnFRLU1fMjNXbUMwNEQ1U3hIMXlROG45R2Y2VTVLd2Z3OVdERUFES25UR09KMjg0Q2ZndlRWSnNFWjRQT1RyWEhPOHJjMkgzMVVKTWVmV3NibThoVk83dktsQWpzRzR1QXU2T0xRalZmX2xwQzRoamR6MU5KRFFTTVQ4V1VGRmc3c2VuRlJ6MEZoTkdmTGU2b1FEWHA2OEJGYVVEUnNNdmlfU29XN2lVVFdsTkVLR0cxbDFsYlBKX1JLTXc1bUtSdDZPS2RfbWZQalZqUTExenhhbF9MU0NWa0J1UU1LZjk5bWdHZTU3a2M4NGJGU0R1SUJZSVV2eW5lbkphdE81ZVFwMWV0eHV2X0oxdlE0aGhHdExEdW1PMllHNVVWYThKRFQ2S1lxRHlyNk1WdGU2SDFxTzNEQjVsOEh4MXFjQkFwMW95WUdJSHdsbzRLc1ZpUG5fZ2pnN2VfVWJobGNfMjM5SHRLaDdIVUwwMmVLRlAwVmFRTjFnVXdVR2UzRFctTy1JQjJ3Ym1HcEp1amRva0F4NXV3S0NpbFZsdnhveG53dzlnb29XenBmTC1wOXNMYzlNemlqQllTaWdRM0hGXzR1UGNJelRWM29HaTZiTGwxODJmNmU1OG94VGNtbWh2VkZRekk3SDJyZjVTeDJoUHpGNVRhbWJ1YkkxTV9WUVpfSHl3azFxY29KV0hkekNxLWtrc25OV1RsVXZhS283QkE4ZE5hek1wblhPWlNPcFBaaXhFUThBSHhva211eUdKUGJxdHFrT2RqWnQ5ZDl2NWdjTXZ1YUk5Nkg3a2RNWS1nS0xDcXM5aVZqV1pKMXBhNk5UbGl6aDJhdjlfSnJna0dDMXZyYjdGSmQ1d1FLVXRPVWlkS1lwa1FlYUstTlRYYzZUZlRCM1dITHNtcGVuTm9raFhJYmd2QVNjY2NJX3kxUlJwTnd4SmpHOXJwd0duNjY1VW1jRUdrMndlVkJ5V0JMcHU2aXJ1Vm83V3A5NGxwUENyOHNwX190SEh3eV9UQmJYYmxCay14Z25kTTNyZmdyUHlXT0xUQ0g4SXlad1ZSVGxyRmsyMDlYRllXWXJUTkVxN3kwUkhCMmZENy1Hb19NNGZTS1pYMDNnNGNKdHR1aklFMHAzeW0xN3FPcDR4LTFZMFRPUG5wTEZ6MzJidEZTek1zRHBVLURqLW92eUpxUmVvMmIwbFRWelBsVUYzeDFVSnNteGxaay1WX3RDaThxWEkyRWwzSW1jaUJ6Y25KTzBoTFl6SERTd29nZFJsbHdnMVNTRThmZWlobDFGQzktaGtiLWl0RE1VbWZYMk1hMDhkbDU5clhBNi14OW1QaEFHZ204aUdNbDEwcEt0cHZLM1hZM2FBNGQ5RUM5Y1ItZ3Mtd3hWT0M2LTZCcW51aFlPZWR2RDdGUzE0YVBhSnA3dENGTVBob3J6Y1lleU9EZFNJQTQ0dlpYUFBEQ01ObS0wbDJHYlhneVZ3MlB2cUYyVmJfdGVacUd4NTdkWWQ2RGRxWlJ5MzN0eUFLWTBmWHNBQi1uMVloY24wSUZaNkF0VzhvUXJXdXNlSlJEV2lyM1RWemp6S0pZaFJ5LWZJSHhlbVNjeGczSFNGR3FOSVM3ZEdrcllqSVNFXzNpNzNxcW51UUt5UW5JRGRLd1hQb3Zaa3pnTVV1d0xXV2RnMlY0ejdsX3RGMjBTb2d3cGplZW83WEJiQVVMQTVWdUNkR1hOVTd2enBISGdvbjRLeHp4aTdqbHFIc19uMWdlMjhSTlZkaHIwcXVjUkw4TjFHNk5FYVdkenlOM05oWnhQaUNMbnRqMDRYRUxfOHc3SWFiM3QtMklOeEFfTjZFMEJldUp2WGVWTHE1YzkxOXdjVVFUd3psQnRnSHI4YzdBc3V2d2lFVDhqRnhpT0hVZndmUUs5ZWU4TWtTN0J4b01MSmc9PQ==)
          CERTIFICATE_PRIVATE_KEY: Encrypted(Z0FBQUFBQmd3TFRKVk1kV2l3c1E3LXQ2QmtFTGYyZzV2VnpjbWNvQ1ZwdG9qbTYxaXFYcUNWNnliOEtNRUpISEVGTlFpTXhCNFhUVExzYWlPaUJ0aEdJUUZCM2d4SUdwdWs3MkgyVEVzNGpXclNJTThPaVk5eFl3N19FVkdlWEhUeEZDY01UTWs1RmFqWUpsU3E4SmZLU1NUYXJlV3BrZFhBdUFUOE54VTF3bThCc0dkNFFHSkxCM2pxQ21LemQxREQtR2RYSFgzeUlKYkZUQW54VWdCcVJjc2ExanhnQXE4a0lMbU8yejZmMTVlY3R1eld2a3JMUC14emxUd29RSmk0U1Z4LWFNWktEZE9rTEItaWpmSDRNVElEeG1maXFEX2E3SndKUDNTbjJ5SVRuVXFtQ3BBby0zbmNfSm9lRVNqME9jNjR4TjdlNmFhbkZjWEdlVTZfY1pCVGhWY3lEeGtJaktCZnJ1OEtlQWdObUIzWlFQeGMzNmdoLTkxSEROZWYzLWJuYlpiV3VCYTd5RjVaeHM2OGlPZURyYVRrUE9nNXJnOUtoWlRZWXV3Vlh4Z1NsbUhDRFRJZVcxUVVDNlRuNUdrSlR1ei1lUkZMUGVFMVVEaWdBYmFHdG9EaUYtOS05NVI1M05fWnR4OVdIekFkNXA1aDJNRlAxZFlfZjRqa3BWRWQ1ajZ3MmRLUWJzN1RONjZ0Mk5NaEt3WWVTU2ZWVVRaV25GTlUtUzFicFFTMGJXVU93RnpCREMtTFpXZENEdDBtZHR5aldKRGpod0ZiMzQzMjlWeWhsWjE5cWNwc2UtbUlPOERsVnhydTluWHVMem9kTWVnVklKNm5QRFl3MVFHOWhub0lIaGJBdkZjVi04cnlpU09JeW1yV3RuVFVJWDJ4X1MyT1lHWkZPcjF4WTdwTFpPRDRkT2xHdFM3TEphLUxBZEdFNzgtMVppZXRraHFIZ0RkY3RYQmZLaDQ5bWd4TkkyejktTzVKNHpxaTQ2T2thZUdCaEZxTU52Qnl6VzQzcnZhbFcyYy1tOHgxbDkwTlliVUFhMGdmazdnMWVSWm5JdFljNUNLaW0xejZ5RkY0Q1VtZGRwZk5aZjJXblpQU0FCUjJRZkgyLUJnbzJQZFZjcXV4MXNoZlFCX3ZJTTNjc0RSWU8zQmREVFA4NnF6cmdvd19ZU3ExU2pnNmt1Unh2dXRsUk1iTnpVdVFpTHlDYTBHS3VXMnMzNFlzR29tcHNZVEJTdmF3b3RzSGhiUktTWmxnSEIwY2ZiemhNemRPOXFKWEhzc3hWeE9uS3VaeS1PeDhOSDRTc2dMYkxvb3FSS2NHaXB4bHgwdlBGaGlBaHdhUWIwU3FHY0VIMTltMnU2ZTh5VVoxLTF0dmhYUFZNYzBFem5ORkFTT0hMbUE1WGdqcEQ5c2tMRFFqci1rakZjTU9lX1kxaFp6VkQ3T0otWmFDWkozMEQ4X0RYSmNUOEdqVTg4ZnJLRm1FSVZqU1l0TDVIZklMb3AzZjhYQTZ3a3JfWEJLSnFPS3BwWkJIUGVpUlNmSmpFYTF1RXhEOUR1WmVUSEdTZGpzTThuLUlXbllyOXBpeXRQQmxETEVCWkE2ZzJ3a0JpOHlNLVd1MDJrZUVRSVVUQUdyb3dwZENuaWFRLUQ2TU5UaGo1QU1RUUEwR2JFcnl5MlNZNy1YY2RDSUZhTUhfSTlKX045ZDUyVkRuLVFGc3A4N3VJMXVsZlR6WnhlNVBFNUNKWEdKQUVudGxCTURpOV9FbUFIV0lWVUlaR0VUUG1IcExEZHdZeld2Q2hhMHB3X0ZJYVVBRjVFWFVTM2d1Z19US0RkNk02b3lWX0M2bUZnajI2QlF5Q2JDYWQ0WS0yaFF2NFZYaGUtNmdUSjJUT28ydTRESkJfVHpCQVU5a21UeVRoMmw3bUpPc0thMW1SWXRFNV9lRG5JWWloa29PdE9jX1B6SFhIRmxqd1h3OHp0eWtrcTVvSnhBOW85X1IwSGdDTjhwRXRqYjU0Q3hNV19fN296X3ZPTk03d3ZwQWEzUVh2dVFFclFXRGdxeFRWUlNHRVBLaHdId0psaEdWVHVrekZYTmN6a01IX25tNGV3T0FvMkp6dVNjR1hTR2FwcW5YMHJBZ204UmE5ZU1qbWxjZkZIdkFheWlkM0FfUHB0Mm5SVHI0VzhqZmpwUlVQWjNzX0hrU0x6d09weFZmNGJzNjNLMXhTMV90cGFwYlU1dlMwLWxQR1VUX2hGUjdrbjVRU0JNV2JwQlFiRlBhUE5PS2V3NDRteFlzZ3lVckxJVHhuOXFqc05SWWhEMDRTeHpodTVHOFZ3RWtOMXo2SFNsLUc5ZklrUTY2Rk9zWm52bkJ3MEUwWklyZmVLci1CbEJvUDczckJBT2VrSXJRRVBJcmk2Vzc5bG56dTJjcWhBWG16QjZtMHltTkxrY3R5dW1KUUppS05OM1NDZ2ppV25INTZrcUtPdjJJSkR2aE16QzEtLURBZ3NrU2FsSXQwM3NQTE1Ub2VjdXZQbEh4T3BBX0hpd29BUGpnTTlOa2VsdXBFOEVZRDBJZDRXLTlxdm1PSnVzQm1vSnJCdF9KY3Z2eE13SmdzVE9UTkRQTWZGSUZ1eHNjZjVQUjN4Umh4R25FdFoxTm83N01JbEJDRUlEMWh2S29KZTgxdWJZMWNwNklxd19uVTRNOGhsR0FROW5CSVBJeDNPT3YtMk1zWWdDSDFLYTYwajNpNDFtekFTRVhmVzZmNDZQVWZXTkpYS0k1QU1ZeWhIT2FrX2VLSkpaZzByb1NhdklSOVFzX0dmb1lfcFoteWJQaWthR3ppRm9JcVBUb1ltNC16Yl9CdURKWWprZmZ1a3d4WDJlamdGWGY0THBteGpqMkdXb3AtbE9HaGV3cC1oZnRKOW1BNFljbkt4cmMycG94WExJV1M1Q3pzQUJvZUR1MXJyQ2VwZF9vYV9CWU1UYTFXdGNxMjk3QWprWXg2d21YTklGdi1WTEthZ1FVV0V0NzhLaTFNYW5lSGt3M0YwbjVjRnhFWlZBc3lQdlhtNkU3Y19QNmJ5SExzU3I3M2FaZXgz)
          APPLE_ID_EMAIL: Encrypted(Z0FBQUFBQmd1S0xRNDBqLVQ1UkJac29IeEVxWjZQRmNRbTQ5U1pFb2cyRlEwUHBSMGtnLWZqc3ktRE5VeHJYRnF0TmJDSjh5MDNGM3dGZnI5ZHQ3MzY3bWN2TGJ3RGVnY0pSUnJpRWY4VkZSRWMzaEl1T25nZzQ9)
          APP_SPECIFIC_PASSWORD: Encrypted(Z0FBQUFBQmd1S01mbTZWTnRqbTc0U2tDeGh1TTZkZjQybHNFeUthT3FvaUx1ZXY4eWVkbkxxV1NuaVJrU2lKT3VMY0VWLThBbnVkVEVwZ0xyVThaU0JJMUxORmxyUXVOcnA3Tm1BQzhUeEpxbVVnS1NpWS01TGM9)
          APP_STORE_APP_ID: 1571469558
        xcode: latest
        cocoapods: default
      triggering:
        events:
          - push
          - tag
          - pull_request
        branch_patterns:
          - pattern: 'develop'
            include: true
            source: true
      scripts:
        - name: Install pods
          script: |
            pod install        
        - name: Initialize keychain to be used for codesigning using Codemagic CLI 'keychain' command
          script: |
            keychain initialize
        - name: set up provisioning profiles
          script: |
            PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
            mkdir -p "$PROFILES_HOME"
            PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
            echo ${CM_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
            echo "Saved provisioning profile $PROFILE_PATH"
        - name: Add signing certificate to keychain
          script: |
            echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
            keychain add-certificates --certificate /tmp/certificate.p12
        - name: Increment build number
          script: |
            #!/bin/sh
            set -ex
            # agvtool new-version -all $(($BUILD_NUMBER +1))
            agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
        - name: Set up code signing settings on Xcode project
          script: |
            xcode-project use-profiles
        - name: Build .ipa
          script: |
            xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
      artifacts:
        - build/ios/ipa/*.ipa
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
      publishing:
        email:
            recipients:
              - user1@example.com
            notify:
              success: true
              failure: true
        app_store_connect:                 
            apple_id: $APPLE_ID_EMAIL
            password: $APP_SPECIFIC_PASSWORD